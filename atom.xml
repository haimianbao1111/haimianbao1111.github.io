<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>艾步罗</title>
  
  <subtitle>一枚90后程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://haimianbao1111.github.io/"/>
  <updated>2018-01-22T14:54:16.845Z</updated>
  <id>http://haimianbao1111.github.io/</id>
  
  <author>
    <name>HJY</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>asp.net 用支付宝沙箱环境测试支付接口</title>
    <link href="http://haimianbao1111.github.io/2018/01/21/asp-net-%E7%94%A8%E6%94%AF%E4%BB%98%E5%AE%9D%E6%B2%99%E7%AE%B1%E7%8E%AF%E5%A2%83%E6%B5%8B%E8%AF%95%E6%94%AF%E4%BB%98%E6%8E%A5%E5%8F%A3/"/>
    <id>http://haimianbao1111.github.io/2018/01/21/asp-net-用支付宝沙箱环境测试支付接口/</id>
    <published>2018-01-21T13:44:09.000Z</published>
    <updated>2018-01-22T14:54:16.845Z</updated>
    
    <content type="html"><![CDATA[<div class="note success"><p>沙箱环境的配置 </p></div><h1 id="1-注册成为开发人员"><a href="#1-注册成为开发人员" class="headerlink" title="1.注册成为开发人员"></a>1.注册成为开发人员</h1><div class="note info"><p>注册成功以后，点击以下链接，进入到支付宝官方的沙箱环境说明：<a href="https://docs.open.alipay.com/200/10531" target="_blank" rel="noopener">https://docs.open.alipay.com/200/10531</a> </p></div><p><img src="/images/alipay/支付宝.png" class="full-image">  </p><h1 id="2-沙箱介绍"><a href="#2-沙箱介绍" class="headerlink" title="2.沙箱介绍"></a>2.沙箱介绍</h1><div class="note info"><p>然后点击上图中的沙箱环境，跳转到自己的沙箱环境，配置自己的沙箱环境 。 </p></div><img src="/images/alipay/沙箱应用.png" class="full-image">  # 3.秘钥生成<div class="note info"><p>  至于公钥秘钥的生成，点击 <a href="https://docs.open.alipay.com/291/105971" target="_blank" rel="noopener">https://docs.open.alipay.com/291/105971</a> 下载生成RSA密钥的工具，操作视频可以搜索该链接：<a href="https://openclub.alipay.com/index.php?c=video&amp;fid=76" target="_blank" rel="noopener">https://openclub.alipay.com/index.php?c=video&amp;fid=76</a> 查看生成秘钥的具体操作步骤。<br>重点是秘钥长度一定要是2048，一定要是2048.当时我测试的时候，生成的1024的，验签通过，但是一上传就提示失败。可见再牛逼的网站也是有bug的. </p></div><h1 id="4-下载支付宝支付demo"><a href="#4-下载支付宝支付demo" class="headerlink" title="4.下载支付宝支付demo"></a>4.下载支付宝支付demo</h1><div class="note info"><p>  打开demo，把配置里面的配置改成自己沙箱账号的配置。<br>支付宝支付demo下载的链接：<a href="https://docs.open.alipay.com/54/106682/" target="_blank" rel="noopener">https://docs.open.alipay.com/54/106682/</a><br>把配置文件里面的配置改成沙箱 </p></div><p><img src="/images/alipay/代码网关设置.png" class="full-image">  </p><h1 id="5-下载沙箱钱包"><a href="#5-下载沙箱钱包" class="headerlink" title="5.下载沙箱钱包"></a>5.下载沙箱钱包</h1><div class="note info"><p>进行支付测试，注意不是支付宝哦，详细查看文说明档。，目前沙箱钱包仅提供Android版本，可点击 <a href="https://sandbox.alipaydev.com/user/downloadApp.htm" class="font-color:red" target="_blank" rel="noopener">下载</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note success&quot;&gt;&lt;p&gt;沙箱环境的配置 &lt;/p&gt;&lt;/div&gt;
&lt;h1 id=&quot;1-注册成为开发人员&quot;&gt;&lt;a href=&quot;#1-注册成为开发人员&quot; class=&quot;headerlink&quot; title=&quot;1.注册成为开发人员&quot;&gt;&lt;/a&gt;1.注册成为开发
      
    
    </summary>
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/categories/Asp-Net/"/>
    
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/tags/Asp-Net/"/>
    
  </entry>
  
  <entry>
    <title>前端静态文件如何应对HTTPS的到来</title>
    <link href="http://haimianbao1111.github.io/2018/01/18/%E5%89%8D%E7%AB%AF%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9HTTPS%E7%9A%84%E5%88%B0%E6%9D%A5/"/>
    <id>http://haimianbao1111.github.io/2018/01/18/前端静态文件如何应对HTTPS的到来/</id>
    <published>2018-01-17T17:26:30.000Z</published>
    <updated>2018-01-18T14:33:04.510Z</updated>
    
    <content type="html"><![CDATA[<h1 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h1><div class="note class_name"><p><a href="https://www.cnblogs.com/webARM/p/5728695.html" target="_blank" rel="noopener">https://www.cnblogs.com/webARM/p/5728695.html</a></p></div><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({    owner: 'haimianbao1111',    repo: '2018/01/18/前端静态文件如何应对HTTPS的到来',    oauth: {      client_id: '24f4cb2732b2cd293c3c',      client_secret: '54ad1cb8fc1bbab13871b8b9dd01004340aceca0',    },  })gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;原文链接：&quot;&gt;&lt;a href=&quot;#原文链接：&quot; class=&quot;headerlink&quot; title=&quot;原文链接：&quot;&gt;&lt;/a&gt;原文链接：&lt;/h1&gt;&lt;div class=&quot;note class_name&quot;&gt;&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.
      
    
    </summary>
    
      <category term="前端" scheme="http://haimianbao1111.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="tags" scheme="http://haimianbao1111.github.io/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>搭建评论系统</title>
    <link href="http://haimianbao1111.github.io/2018/01/18/%E6%90%AD%E5%BB%BA%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/"/>
    <id>http://haimianbao1111.github.io/2018/01/18/搭建评论系统/</id>
    <published>2018-01-17T16:20:07.000Z</published>
    <updated>2018-01-18T14:32:56.448Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础使用"><a href="#基础使用" class="headerlink" title="基础使用"></a>基础使用</h1><h2 id="1-注册-OAuth-Application"><a href="#1-注册-OAuth-Application" class="headerlink" title="1. 注册 OAuth Application"></a>1. 注册 OAuth Application</h2><p>点击此处 来注册一个新的 OAuth Application。其他内容可以随意填写，但要确保填入正确的 callback URL（一般是评论页面对应的域名，如 <a href="https://imsun.net）。" target="_blank" rel="noopener">https://imsun.net）。</a></p><p>你会得到一个 client ID 和一个 client secret，这个将被用于之后的用户登录。</p><h2 id="2-引入-Gitment"><a href="#2-引入-Gitment" class="headerlink" title="2. 引入 Gitment"></a>2. 引入 Gitment</h2><p>将下面的代码添加到你的页面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;https://imsun.github.io/gitment/style/default.css&quot;&gt;</span><br><span class="line">&lt;script src=&quot;https://imsun.github.io/gitment/dist/gitment.browser.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var gitment = new Gitment(&#123;</span><br><span class="line">  id: &apos;页面 ID&apos;, // 可选。默认为 location.href</span><br><span class="line">  owner: &apos;你的 GitHub ID&apos;,</span><br><span class="line">  repo: &apos;存储评论的 repo&apos;,</span><br><span class="line">  oauth: &#123;</span><br><span class="line">    client_id: &apos;你的 client ID&apos;,</span><br><span class="line">    client_secret: &apos;你的 client secret&apos;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br><span class="line">gitment.render(&apos;container&apos;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>注意，上述代码引用的 Gitment 将会随着开发变动。如果你希望始终使用最新的界面与特性即可引入上述代码。</p><p>如果你希望引用确定版本的 Gitment，则应该使用 npm 进行安装。<br><div class="note class_name"><p>$ npm install –save gitment</p></div></p><h2 id="3-初始化评论"><a href="#3-初始化评论" class="headerlink" title="3. 初始化评论"></a>3. 初始化评论</h2><p>页面发布后，你需要访问页面并使用你的 GitHub 账号登录（请确保你的账号是第二步所填 repo 的 owner），点击初始化按钮。</p><p>之后其他用户即可在该页面发表评论。</p><h1 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h1><p>Gitment 很容易进行自定义，你可以写一份自定义的 CSS 或者使用一个新的主题。（主题可以改变 DOM 结构而自定义 CSS 不能）</p><p>比如你可以通过自定义主题将评论框放在评论列表前面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">const myTheme = &#123;</span><br><span class="line">  render(state, instance) &#123;</span><br><span class="line">    const container = document.createElement(&apos;div&apos;)</span><br><span class="line">    container.lang = &quot;en-US&quot;</span><br><span class="line">    container.className = &apos;gitment-container gitment-root-container&apos;</span><br><span class="line">    container.appendChild(instance.renderHeader(state, instance))</span><br><span class="line">    container.appendChild(instance.renderEditor(state, instance))</span><br><span class="line">    container.appendChild(instance.renderComments(state, instance))</span><br><span class="line">    container.appendChild(instance.renderFooter(state, instance))</span><br><span class="line">    return container</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line">const gitment = new Gitment(&#123;</span><br><span class="line">  // ...</span><br><span class="line">  theme: myTheme,</span><br><span class="line">&#125;)</span><br><span class="line">gitment.render(&apos;container&apos;)</span><br></pre></td></tr></table></figure></p><h1 id="原文链接："><a href="#原文链接：" class="headerlink" title="原文链接："></a>原文链接：</h1><div class="note class_name"><p><a href="https://imsun.net/posts/gitment-introduction/" target="_blank" rel="noopener">https://imsun.net/posts/gitment-introduction/</a></p></div><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({    owner: 'haimianbao1111',    repo: '2018/01/18/搭建评论系统',    oauth: {      client_id: '24f4cb2732b2cd293c3c',      client_secret: '54ad1cb8fc1bbab13871b8b9dd01004340aceca0',    },  })gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础使用&quot;&gt;&lt;a href=&quot;#基础使用&quot; class=&quot;headerlink&quot; title=&quot;基础使用&quot;&gt;&lt;/a&gt;基础使用&lt;/h1&gt;&lt;h2 id=&quot;1-注册-OAuth-Application&quot;&gt;&lt;a href=&quot;#1-注册-OAuth-Application&quot;
      
    
    </summary>
    
      <category term="GitHub Issues" scheme="http://haimianbao1111.github.io/categories/GitHub-Issues/"/>
    
    
      <category term="tags" scheme="http://haimianbao1111.github.io/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>Gitlab之Gitlab-CI体验</title>
    <link href="http://haimianbao1111.github.io/2018/01/17/%E5%8D%9A%E5%AE%A2%E8%AF%A6%E6%9E%84/"/>
    <id>http://haimianbao1111.github.io/2018/01/17/博客详构/</id>
    <published>2018-01-16T16:24:41.000Z</published>
    <updated>2018-01-18T14:32:40.707Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Gitlab-CI"><a href="#Gitlab-CI" class="headerlink" title="Gitlab-CI"></a>Gitlab-CI</h1><p>持续集成(CI)：通常使用CI来做一些自动化工作，比如程序的打包，单元测试，部署等，这种构建方式避免了打包环境差异引起的错误，提高了工作效率。<br>GitLab-CI是GitLab官方提供的持续集成服务，我们可以在仓库的根目录下新建.gitlab-ci.yml文件，自己定义持续集成流程模板，并且在GitLab中配置runner，在之后的每次提交合并中将会触发构建，并且可以通过GitLab的hook, 在代码提交的各个环节自动地完成一系列的构建工作，总之对于一些非复杂性的集成需求，都是可以满足的。<br><!-- 阅读全文 --><br>链接 <a href="http://www.mdslq.cn/" target="_blank" rel="noopener">http://www.mdslq.cn/</a></p><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({    owner: 'haimianbao1111',    repo: '2018/01/17/博客详构',    oauth: {      client_id: '24f4cb2732b2cd293c3c',      client_secret: '54ad1cb8fc1bbab13871b8b9dd01004340aceca0',    },  })gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Gitlab-CI&quot;&gt;&lt;a href=&quot;#Gitlab-CI&quot; class=&quot;headerlink&quot; title=&quot;Gitlab-CI&quot;&gt;&lt;/a&gt;Gitlab-CI&lt;/h1&gt;&lt;p&gt;持续集成(CI)：通常使用CI来做一些自动化工作，比如程序的打包，单元测试，部署等，
      
    
    </summary>
    
      <category term="博客详构" scheme="http://haimianbao1111.github.io/categories/%E5%8D%9A%E5%AE%A2%E8%AF%A6%E6%9E%84/"/>
    
    
      <category term="tags" scheme="http://haimianbao1111.github.io/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>初探-Hexo</title>
    <link href="http://haimianbao1111.github.io/2018/01/16/%E5%88%9D%E6%8E%A2-Hexo/"/>
    <id>http://haimianbao1111.github.io/2018/01/16/初探-Hexo/</id>
    <published>2018-01-16T14:52:08.000Z</published>
    <updated>2018-01-18T14:32:47.802Z</updated>
    
    <content type="html"><![CDATA[<p>什么都没有啊…<br>…<br>…<br>…<br>…<br>…<br>…</p><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({    owner: 'haimianbao1111',    repo: '2018/01/16/初探-Hexo',    oauth: {      client_id: '24f4cb2732b2cd293c3c',      client_secret: '54ad1cb8fc1bbab13871b8b9dd01004340aceca0',    },  })gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;什么都没有啊…&lt;br&gt;…&lt;br&gt;…&lt;br&gt;…&lt;br&gt;…&lt;br&gt;…&lt;br&gt;…&lt;/p&gt;
&lt;p&gt;&lt;div id=&quot;container&quot;&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;https://imsun.github.io/gitme
      
    
    </summary>
    
      <category term="初探-Hexo" scheme="http://haimianbao1111.github.io/categories/%E5%88%9D%E6%8E%A2-Hexo/"/>
    
    
      <category term="tags" scheme="http://haimianbao1111.github.io/tags/tags/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 高级配置</title>
    <link href="http://haimianbao1111.github.io/2018/01/16/Hexo-%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    <id>http://haimianbao1111.github.io/2018/01/16/Hexo-高级配置/</id>
    <published>2018-01-16T14:38:07.000Z</published>
    <updated>2018-01-18T14:32:32.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Site-网站"><a href="#Site-网站" class="headerlink" title="Site 网站"></a>Site 网站</h1><p>title: 为学   网站标题<br>subtitle: 天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。   #网站副标题<br>description: 天下事有难易乎？为之，则难者亦易矣；不为，则易者亦难矣。   #网站描述<br>author: willxue   #您的名字<br>language: zh-CN   #网站使用的语言<br>timezone:           #网站时区。Hexo 默认使用您电脑的时区<br><!-- 阅读全文 --></p><h1 id="URL-网址"><a href="#URL-网址" class="headerlink" title="URL 网址"></a>URL 网址</h1><p>url: <a href="http://willxue.top" target="_blank" rel="noopener">http://willxue.top</a><br>permalink: :year/:month/:day/:title/    #生成文件名字的格式我改成blog/:title:year:month:day/<br>permalink_defaults:</p><h1 id="Directory-目录配置"><a href="#Directory-目录配置" class="headerlink" title="Directory 目录配置"></a>Directory 目录配置</h1><p>source_dir: source   #源文件夹，这个文件夹用来存放内容。<br>public_dir: public   #公共文件夹，这个文件夹用于存放生成的站点文件。<br>tag_dir: tags   #标签文件夹<br>archive_dir: archives   #归档文件夹<br>category_dir: categories   #分类文件夹<br>code_dir: downloads/code    #nclude code 文件夹<br>i18n_dir: :lang   #国际化（i18n）文件夹<br>skip_render:   #跳过指定文件的渲染，您可使用 glob 表达式来匹配路径。</p><h1 id="Writing-文章"><a href="#Writing-文章" class="headerlink" title="Writing 文章"></a>Writing 文章</h1><p>new_post_name: :title.md   # 新建文章默认文件名<br>default_layout: post   # 默认布局<br>titlecase: false   # Transform title into titlecase<br>external_link: true   # 在新标签中打开一个外部链接，默认为true<br>filename_case: 0   #转换文件名，1代表小写；2代表大写；默认为0，意思就是创建文章的时候，是否自动帮你转换文件名，默认就行，意义不大。<br>render_drafts: false   #是否渲染_drafts目录下的文章，默认为false<br>post_asset_folder: false   #启动 Asset 文件夹<br>relative_link: false   #把链接改为与根目录的相对位址，默认false<br>future: true   #显示未来的文章，默认false<br>highlight:   #代码块的设置<br>  enable: true<br>  line_number: true<br>  auto_detect: false<br>  tab_replace:</p><p><div id="container"></div></p><p><link rel="stylesheet" href="https://imsun.github.io/gitment/style/default.css"></p><script src="https://imsun.github.io/gitment/dist/gitment.browser.js"></script><script>var gitment = new Gitment({    owner: 'haimianbao1111',    repo: '2018/01/16/Hexo-高级配置',    oauth: {      client_id: '24f4cb2732b2cd293c3c',      client_secret: '54ad1cb8fc1bbab13871b8b9dd01004340aceca0',    },  })gitment.render('container')</script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Site-网站&quot;&gt;&lt;a href=&quot;#Site-网站&quot; class=&quot;headerlink&quot; title=&quot;Site 网站&quot;&gt;&lt;/a&gt;Site 网站&lt;/h1&gt;&lt;p&gt;title: 为学   网站标题&lt;br&gt;subtitle: 天下事有难易乎？为之，则难者亦易矣；不为
      
    
    </summary>
    
      <category term="Hexo 高级配置" scheme="http://haimianbao1111.github.io/categories/Hexo-%E9%AB%98%E7%BA%A7%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="tags" scheme="http://haimianbao1111.github.io/tags/tags/"/>
    
  </entry>
  
</feed>
