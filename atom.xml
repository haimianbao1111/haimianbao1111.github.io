<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>HJY</title>
  
  <subtitle>一枚90后程序员</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://haimianbao1111.github.io/"/>
  <updated>2018-03-09T03:09:19.756Z</updated>
  <id>http://haimianbao1111.github.io/</id>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>获取input(file)的路径，更改默认样式</title>
    <link href="http://haimianbao1111.github.io/2018/03/09/%E8%8E%B7%E5%8F%96-input-type-file-%E7%9A%84%E8%B7%AF%E5%BE%84%EF%BC%8C%E6%9B%B4%E6%94%B9%E9%BB%98%E8%AE%A4%E6%A0%B7%E5%BC%8F/"/>
    <id>http://haimianbao1111.github.io/2018/03/09/获取-input-type-file-的路径，更改默认样式/</id>
    <published>2018-03-09T02:42:05.000Z</published>
    <updated>2018-03-09T03:09:19.756Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述:"></a>概述:</h1><h2 id="如何获取input-file-的路径？"><a href="#如何获取input-file-的路径？" class="headerlink" title="如何获取input(file)的路径？"></a>如何获取input(file)的路径？</h2><ol><li><p>定义标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; id=&quot;file_input&quot;&gt;&lt;img src=&quot;&quot; class=&quot;img&quot; /&gt;</span><br></pre></td></tr></table></figure></li><li><p>获取路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;input[type=&apos;file&apos;]&quot;).change(function()&#123;   </span><br><span class="line">   var file = this.files[0];</span><br><span class="line">   if (window.FileReader) &#123;    </span><br><span class="line">        var reader = new FileReader();    </span><br><span class="line">        reader.readAsDataURL(file);    </span><br><span class="line">        //监听文件读取结束后事件    </span><br><span class="line">        reader.onloadend = function (e) &#123;</span><br><span class="line">            $(&quot;.img&quot;).attr(&quot;src&quot;,e.target.result);    //e.target.result就是最后的路径地址</span><br><span class="line">        &#125;;    </span><br><span class="line">    &#125; </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ol><h2 id="input-file-样式修改及上传文件名显示"><a href="#input-file-样式修改及上传文件名显示" class="headerlink" title="input(file)样式修改及上传文件名显示"></a>input(file)样式修改及上传文件名显示</h2><blockquote><p>实现思路：<br>a标签包裹input元素<br>设置a标签为上传按钮的样式，相对定位<br>设置input为透明，绝对定位，覆盖到a上面</p></blockquote><p>html代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;javascript:;&quot; class=&quot;file gradient&quot;&gt;选择文件 </span><br><span class="line">　　&lt;input type=&quot;file&quot; &gt; </span><br><span class="line">&lt;div class=&quot;showFileName&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>CSS代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">.file &#123;</span><br><span class="line">    position: relative;</span><br><span class="line">    display: inline-block;</span><br><span class="line">    background: #ccc;</span><br><span class="line">    border: 1px solid #333;</span><br><span class="line">    padding: 4px 20px;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-decoration: none;</span><br><span class="line">    text-indent: 0;</span><br><span class="line">    line-height: 20px;</span><br><span class="line">    border-radius: 20px;</span><br><span class="line">    color: #333;</span><br><span class="line">    font-size: 13px;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.file input &#123;</span><br><span class="line">    position: absolute;</span><br><span class="line">    font-size: 100px;</span><br><span class="line">    right: 0;</span><br><span class="line">    top: 0;</span><br><span class="line">    opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">.gradient&#123;</span><br><span class="line">   </span><br><span class="line">    filter:alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr=#fff,endcolorstr=#ccc,gradientType=0);</span><br><span class="line">    -ms-filter:alpha(opacity=100 finishopacity=50 style=1 startx=0,starty=0,finishx=0,finishy=150) progid:DXImageTransform.Microsoft.gradient(startcolorstr=#fff,endcolorstr=#ccc,gradientType=0);/*IE8*/    </span><br><span class="line">    background:#ccc; /* 一些不支持背景渐变的浏览器 */  </span><br><span class="line">    background:-moz-linear-gradient(top, #fff, #ccc);  </span><br><span class="line">    background:-webkit-gradient(linear, 0 0, 0 bottom, from(#fff), to(#ccc));  </span><br><span class="line">    background:-o-linear-gradient(top, #fff, #ccc); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上传文件的文件名不显示，需要用js处理:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;.file&quot;).on(&quot;change&quot;,&quot;input[type=&apos;file&apos;]&quot;,function()&#123;</span><br><span class="line">    var filePath=$(this).val();</span><br><span class="line">    if(filePath.indexOf(&quot;jpg&quot;)!=-1 || filePath.indexOf(&quot;png&quot;)!=-1)&#123;</span><br><span class="line">        $(&quot;.fileerrorTip1&quot;).html(&quot;&quot;).hide();</span><br><span class="line">        var arr=filePath.split(&apos;\\&apos;);</span><br><span class="line">        var fileName=arr[arr.length-1];</span><br><span class="line">        $(&quot;.showFileName1&quot;).html(fileName);</span><br><span class="line">    &#125;else&#123;</span><br><span class="line">        $(&quot;.showFileName1&quot;).html(&quot;&quot;);</span><br><span class="line">        $(&quot;.fileerrorTip1&quot;).html(&quot;您未上传文件，或者您上传文件类型有误！&quot;).show();</span><br><span class="line">        return false</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述:&quot;&gt;&lt;/a&gt;概述:&lt;/h1&gt;&lt;h2 id=&quot;如何获取input-file-的路径？&quot;&gt;&lt;a href=&quot;#如何获取input-file-的路径？&quot; class=&quot;head
      
    
    </summary>
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/categories/Asp-Net-Mvc/"/>
    
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/tags/Asp-Net-Mvc/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET cache缓存的用法</title>
    <link href="http://haimianbao1111.github.io/2018/03/07/ASP-NET-cache%E7%BC%93%E5%AD%98%E7%9A%84%E7%94%A8%E6%B3%95/"/>
    <id>http://haimianbao1111.github.io/2018/03/07/ASP-NET-cache缓存的用法/</id>
    <published>2018-03-07T05:07:23.000Z</published>
    <updated>2018-03-07T12:02:41.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述："><a href="#概述：" class="headerlink" title="概述："></a>概述：</h1><p>HttpRuntime.Cache在ASP.NET的使用</p><h2 id="5个等级的缓存"><a href="#5个等级的缓存" class="headerlink" title="5个等级的缓存"></a>5个等级的缓存</h2><blockquote><p>1级是网络级缓存，缓存在浏览器，CDN以及代理服务器中   （举个例子：每个帮助页面都进行了缓存，访问一个页面的代码非常简单）<br>2级是由.net框架 HttpRuntime.Cache完成，在每台服务器的内存中。<br>3级Redis,分布式内存键值存储，在多个支撑同一个站点的服务器上共享缓存项。<br>4级SQL Server Cache，整个数据库，所有数据都被放到内存中。<br>5级SSD。通常只在SQL Server预热后才生效</p></blockquote><h1 id="使用场景："><a href="#使用场景：" class="headerlink" title="使用场景："></a>使用场景：</h1><blockquote><p>1.数据可能会被频繁的被使用，这种数据可以缓存。<br>2.数据的访问频率非常高，或者一个数据的访问频率不高，但是它的生存周期很长，这样的数据最好也缓存起来。<br>3.是一个常常被忽略的问题，有时候我们缓存了太多数据，通常在一台X86的机子上，如果你要缓存的数据超过800M的话，就会出现内存溢出的错误。所以说缓存是有限的。换名话说，你应该估计缓存集的大小，把缓存集的大小限制在10以内，否则它可能会出问题。在Asp.net中，如果缓存过大的话也会报内存溢出错误，特别是如果缓存大的DataSet对象的时候。</p></blockquote><p>你应该认真分析你的程序。根据实际情况来看哪里该用，哪里不该用。如：cache用得过多也会增大服务器的压力。整页输出缓存，又会影响数据的更新。 如果真的需要缓存很大量的数据，可以考虑静态技术。</p><h1 id="具体使用："><a href="#具体使用：" class="headerlink" title="具体使用："></a>具体使用：</h1><p>添加cachehelper类<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">   /// 缓存帮助类</span><br><span class="line">   /// 时间：2016/05/07</span><br><span class="line">   /// &lt;/summary&gt;</span><br><span class="line">   public class CacheHelper</span><br><span class="line">   &#123;</span><br><span class="line">       #region 获取数据缓存</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 获取数据缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       /// &lt;param name=&quot;cacheKey&quot;&gt;键&lt;/param&gt;</span><br><span class="line">       /// &lt;param name=&quot;objObject&quot;&gt;&lt;/param&gt;</span><br><span class="line">       public static object GetCache(string cacheKey)</span><br><span class="line">       &#123;</span><br><span class="line">           var objCache = HttpRuntime.Cache;</span><br><span class="line">           return objCache[cacheKey];</span><br><span class="line">       &#125;</span><br><span class="line">       #endregion</span><br><span class="line"></span><br><span class="line">       #region 设置数据缓存</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 设置数据缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public static void SetCache(string cacheKey, object objObject)</span><br><span class="line">       &#123;</span><br><span class="line">           var objCache = HttpRuntime.Cache;</span><br><span class="line">           objCache.Insert(cacheKey, objObject);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 设置数据缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public static void SetCache(string cacheKey, object objObject, TimeSpan timeout)</span><br><span class="line">       &#123;</span><br><span class="line">           var objCache = HttpRuntime.Cache;</span><br><span class="line">           objCache.Insert(cacheKey, objObject, null, DateTime.MaxValue, timeout, CacheItemPriority.NotRemovable, null);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 设置数据缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public static void SetCache(string cacheKey, object objObject, DateTime absoluteExpiration, TimeSpan slidingExpiration)</span><br><span class="line">       &#123;</span><br><span class="line">           var objCache = HttpRuntime.Cache;</span><br><span class="line">           objCache.Insert(cacheKey, objObject, null, absoluteExpiration, slidingExpiration);</span><br><span class="line">       &#125;</span><br><span class="line">       #endregion</span><br><span class="line"></span><br><span class="line">       #region 移除缓存</span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 移除指定数据缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public static void RemoveAllCache(string cacheKey)</span><br><span class="line">       &#123;</span><br><span class="line">           var cache = HttpRuntime.Cache;</span><br><span class="line">           cache.Remove(cacheKey);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       /// &lt;summary&gt;</span><br><span class="line">       /// 移除全部缓存</span><br><span class="line">       /// &lt;/summary&gt;</span><br><span class="line">       public static void RemoveAllCache()</span><br><span class="line">       &#123;</span><br><span class="line">           var cache = HttpRuntime.Cache;</span><br><span class="line">           IDictionaryEnumerator cacheEnum = cache.GetEnumerator();</span><br><span class="line">           while (cacheEnum.MoveNext())</span><br><span class="line">           &#123;</span><br><span class="line">               cache.Remove(cacheEnum.Key.ToString());</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       #endregion      </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><p>添加完对此进行调用先判断是否已经cache没有则添加<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var cacheKey = &quot;sid&quot; + assessId + &quot;uid&quot; + studentId + &quot;pindex&quot; + pageHelper.PageIndex;</span><br><span class="line">    var cachelist = CacheHelper.GetCache(cacheKey) as List&lt;Question&gt;;</span><br><span class="line">    if (cachelist != null)</span><br><span class="line">    &#123;</span><br><span class="line">        return cachelist;</span><br><span class="line">    &#125;</span><br><span class="line">获取数据</span><br><span class="line"></span><br><span class="line">    var result = GetAssessQuseList(pageHelper, tableName, fields, null, orderBy, true, studentId, otherFields);</span><br><span class="line">    CacheHelper.SetCache(cacheKey, result, TimeSpan.FromSeconds(120));</span><br><span class="line">    return result;</span><br></pre></td></tr></table></figure></p><p>下面是移除cache<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var cacheKey = &quot;sid&quot; + assessId + &quot;uid&quot; + base.LoggingUser.UserId + &quot;pindex&quot; + pageIndex;</span><br><span class="line">   var cachelist = CacheHelper.GetCache(cacheKey) as List&lt;Question&gt;;</span><br><span class="line">   if (cachelist != null)</span><br><span class="line">   &#123;</span><br><span class="line">       CacheHelper.RemoveAllCache(cacheKey);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述：&quot;&gt;&lt;a href=&quot;#概述：&quot; class=&quot;headerlink&quot; title=&quot;概述：&quot;&gt;&lt;/a&gt;概述：&lt;/h1&gt;&lt;p&gt;HttpRuntime.Cache在ASP.NET的使用&lt;/p&gt;
&lt;h2 id=&quot;5个等级的缓存&quot;&gt;&lt;a href=&quot;#5个等级的缓
      
    
    </summary>
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/categories/Asp-Net-Mvc/"/>
    
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/tags/Asp-Net-Mvc/"/>
    
  </entry>
  
  <entry>
    <title>Web 安全整理</title>
    <link href="http://haimianbao1111.github.io/2018/03/07/Web-%E5%AE%89%E5%85%A8%E6%95%B4%E7%90%86/"/>
    <id>http://haimianbao1111.github.io/2018/03/07/Web-安全整理/</id>
    <published>2018-03-07T05:06:09.000Z</published>
    <updated>2018-03-07T12:00:00.689Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>有过网站开发经验的朋友都知道网站安全是构建网站时必须要考虑的一个因素，网站安全的重点在于服务器的安全配置管理以及程序脚本的完善性。值得注意的是，如果服务器的账号和权限由于管理不善而泄露了，即使技术上网站系统再安全，也不可避免会受到攻击。</p><p>在笔者曾经参与过的一个项目中，客户方邀请了专业的第三方安全测试公司进行了安全性的全面检测，同时也针对性地进行了安全性的改善，特别是在应用程序方面。此文将分享改善过程中的几个典型问题的分析和解决对策，包括SQL注入攻击、跨站点脚本攻击、验证码绕过等，希望能够为大家在改善网站安全方面的工作提供参考，并采取相应的防范措施。</p><h1 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h1><h2 id="问题1"><a href="#问题1" class="headerlink" title="问题1."></a>问题1.</h2><p>描述：易受到SQL注入攻击<br>风险：攻击者可以通过应用程序发送数据库命令，这些命令将被服务器执行。这可以用来对数据库进行完全控制。这些SQL注入漏洞可以通过在其中一个区域插入“and 7 = 7 -”或“and 8 = 9 -”，并比较结果进行判断。<br>分析：SQL注入攻击是由于服务器对参数检查不够，而导致攻击者借此获得敏感信息。因此，需要使用参数化查询以确保攻击者无法操作数据库的SQL查询语句。例如，如果应用程序要求输入名称，那它应该只接受字母字符、空格和撇号，而不接受任何其他字符。也就是说，在应用程序中的所有输入域实施服务器端白名单技术。特别是所有用于SQL语句的输入域，需要空格的都应该用引号括起来。<br>改善：在程序中所有可接受外部参数的地方进行逐一识别，以过滤危险字符。如在全局函数中定义“禁止字符串列表”，该表中列出所要过滤出的SQL攻击代码可能包含的字符串。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">and |exec |insert |select |delete |update |count | * |chr |mid |master |truncate |char |declare |&lt;|&gt;|’|(|)|&#123;|&#125;</span><br></pre></td></tr></table></figure></p><h2 id="问题2"><a href="#问题2" class="headerlink" title="问题2."></a>问题2.</h2><p>描述：易受到跨站点脚本攻击<br>风险：此漏洞可以被用来获取身份验证Cookie，攻击管理员账户，或使应用程序的用户攻击其他服务器和系统。该漏洞可以通过在某区域中插入“<script>alert(‘23389950’);</script>”来判断。<br>分析：这也需要在本网站的所有输入域实施服务器端白名单技术。如果需要特殊字符，应该转换为更安全的形式。如适用于各种语言的HTML转码：<br>&amp;应转换为 &amp;；<br>“应转换为”；<br>‘应转换为&amp;39；<br>将&gt;应转换为&gt;；<br>&lt;应转换为&lt;。<br>改善：除了这些标准的HTML转码之外，对于可疑字符串也要进行强化检查和转化，并进一步执行以下操作：（1）对各页面的输入参数进行强化检查；（2）对原来只在客户端判断的参数，在服务器端进一步强化检查;（3）最终提供了全局的转码和过滤的函数。当然这需要在性能和扩展性以及安全性方面的平衡综合考虑。</p><h2 id="问题3"><a href="#问题3" class="headerlink" title="问题3."></a>问题3.</h2><p>描述：非安全的CrossDomain.XML文件<br>风险：为解决Flash/Flex系统中的跨域问题，提出了crossdomain.xml跨域策略文件。虽然可以解决跨域问题，但是也带来了恶意攻击的风险，如果该策略文件里允许访问任何域，就可能允许发起对网络服务器的跨站点请求伪造和跨站点脚本攻击。比如，不安全Flash应用程序可能会访问本地数据和用户保存的网页记录，甚至传播病毒和恶意代码。<br>分析：考虑如何确保只对提供安全资源的可信域开放允许。<br>改善：经过调查，发现在程序目录下的crossdomain.xml文件里的配置如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=”1.0″?&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE cross-domain-policy SYSTEM ”http://www.macromedia.com/xml/dtds/cross-domain-policy.dtd”&gt;</span><br><span class="line"></span><br><span class="line">&lt;cross-domain-policy&gt;</span><br><span class="line"></span><br><span class="line">&lt;allow-access-from domain=”*” /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/cross-domain-policy&gt;</span><br></pre></td></tr></table></figure></p><p>文件中的allow-access-from 实体设置为星号设置为允许任何域访问，将其修改为 </p><p><allow-access-from domain="”*.example.com”">，表示只允许本域访问，该问题就解决了。</allow-access-from></p><h2 id="问题4"><a href="#问题4" class="headerlink" title="问题4."></a>问题4.</h2><p>描述：网站后台管理通过不安全链接实施<br>风险：管理访问没有强制实施SSL，这可能允许攻击者监视并修改用户和服务器之间的发送的包括账户凭据在内的所有数据。如果攻击者通过代理或者路由软件拦截服务器和管理员间的通信，敏感数据可能被截获，进而管理员账户可能会受到危害。<br>分析：管理访问没有强制实施SSL，为防止数据拦截，管理访问应该强制执行HTTPS (SSL3.0)。<br>改善：运维对服务器进行了配置调整，单独配置支持了SSL3.0访问管理后台。</p><h2 id="问题5"><a href="#问题5" class="headerlink" title="问题5."></a>问题5.</h2><p>描述：验证环节可以被绕过<br>风险：用户发布信息时，虽然有页面的验证码防止自动恶意发布，但仍可能被绕过进行自动提交。绕过的方式之一是使用过滤和识别软件，之二是可以利用Cookie或Session信息绕过验证码。<br>分析：图像失真机制本身不是特别强，可以很容易地使用公开的过滤和识别软件来识别。生成的图片也是可以预测的，因为使用的字符集很简单（只是数字），建议实现一个更强大的验证码系统。<br>Cookie或session信息处理有漏洞导致验证码被绕过, 确保每一个链接只能取得唯一的验证码，并确保每个请求产生并需要一个新的验证码。<br>改善：根据需要增加验证码的复杂度，而不只是单数字。<br>经过分析发现是因为验证码被存入了Session里，而开发人员忘记在提交之后清空Session中的验证码的值，导致验证码在过期时间内一直可用，从而可能被利用多次提交。因此在提交后追加了及时清空验证码的操作。</p><h2 id="问题6"><a href="#问题6" class="headerlink" title="问题6."></a>问题6.</h2><p>描述：泄露敏感信息<br>风险：此信息只能用于协助利用其他漏洞，并不能直接用来破坏应用程序。网站的robots.txt文件里可以获得敏感目录的信息，这可能允许攻击者获得有关应用程序内部的其他信息，这些信息可能被用来攻击其他漏洞。<br>分析：robots.txt不应在提供管理界面的信息。如果robots.txt文件暴露了Web站点结构，则需要将敏感内容移至隔离位置，以避免搜索引擎机器人搜索到此内容。<br>改善：当然robots.txt要根据SEO的要求来处理，但也要同样注意安全性。如：disallow:/testadmin/，其中testadmin为管理后台，就被暴露了。可以根据实际情况是否必要决定删除robots.txt文件或者把敏感目录单独配置禁止搜索引擎搜索。</p><h2 id="问题7"><a href="#问题7" class="headerlink" title="问题7."></a>问题7.</h2><p>描述：密码安全<br>风险：假如某网站数据库泄露，那么用户信息就被一览无余了，如果这是用户的常用密码，那么坏人拿到密码就可以进行撞库操作，那么你买的12306的票就会被坏人退了。以前csdn和天涯就是使用明文来存储密码的，之后就出现的泄露事件。<br>改善：md5加盐加密<br>什么是md5加盐？在存储密码的时候，我们可以将真实的密码+“盐”之后再进行md5加密。“盐”可以是一个字符串（无规律），也可以是一个字段，比如说是姓名字段，也可是是单独的字段。<br>在判断用户是否存在的时候，我们先将输入的密码+“盐”，然后md5加密，在和数据库中的密码字段进行匹配。这样做会安全一些。</p><h2 id="问题8"><a href="#问题8" class="headerlink" title="问题8."></a>问题8.</h2><p>描述：权限控制漏洞<br>风险：未经授权可以进行的操作都是权限控制漏洞<br>例如，某些网站的后台操作就仗着「以为用户不知道入口地址」不进行任何权限检查，又例如，某些操作可能出现不允许更改的字段被用户递交更改（往往是那些网页上标记为 disabled 或者 hidden 的字段），再例如，允许通过 ../ 访问到不应该被访问的文件等（一般存在于 include 中）。<br>改善：所有地方都要进行权限检查（如是否已登录、当前用户是否有足够权限、该项是否可修改等），总之，不要相信任何来自用户的数据，URL 当然也是。</p><h2 id="问题9"><a href="#问题9" class="headerlink" title="问题9."></a>问题9.</h2><p>描述：验证码<br>风险：非一次性、容易被识别。<br>非一次性指的是，同一个验证码可以一直被用下去。一般来说，每进行一次验证码校对（无论正确与否），都应该强制更换或清除 Session 中的验证码。关于识别问题，在当前科技水平下，不加噪点不加扭曲的验证码几乎是 100% 可识别的。<br>改善：使用行为验证方式验证；加干扰线验证</p><h2 id="其他问题汇总："><a href="#其他问题汇总：" class="headerlink" title="其他问题汇总："></a>其他问题汇总：</h2><p>问题：可能通过登录页面枚举出用户名，因为根据账户是否存在的错误信息是不同的。<br>对策：修改错误信息使之不带有提示性，如“您输入的邮箱或密码不对!” 并且超过一定次数则对该IP进行锁定。<br><br><br>问题：检测到可能泄露敏感信息或被恶意利用的冗余文件，如测试文件、bak文件、临时文件。<br>对策：除去服务器中的相应文件。<br><br><br>问题：发现潜在机密信息，如名为order的文件很容易被联想到用户订单。<br>对策：避免在文件名中含有完整的敏感词汇或不要在容易猜测到的文件中保存敏感信息，或者限制对它们的访问。<br><br><br>问题：发现内部信息泄露。<br>对策：除去代码中漏删的内部IP地址，内部组织，人员相关信息等。<br><br><br>问题：XSS 漏洞，CSRF 漏洞<br>对策：前端安全验证控制<br><div class="note success"><p>参考1：<a href="http://blog.csdn.net/lifushan123/article/details/45197753" target="_blank" rel="noopener">http://blog.csdn.net/lifushan123/article/details/45197753</a><br>参考2：<a href="http://blog.csdn.net/fengyinchao/article/details/50775121" target="_blank" rel="noopener">http://blog.csdn.net/fengyinchao/article/details/50775121</a></p></div></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;有过网站开发经验的朋友都知道网站安全是构建网站时必须要考虑的一个因素，网站安全的重点在于服务器的安全配置管理以及程序脚本的完善性。值得注意的
      
    
    </summary>
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/categories/Asp-Net-Mvc/"/>
    
    
      <category term="Asp.Net Mvc,Web 安全" scheme="http://haimianbao1111.github.io/tags/Asp-Net-Mvc-Web-%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>ASP.NET MVC使用EPPlus，导出数据到Excel</title>
    <link href="http://haimianbao1111.github.io/2018/03/02/ASP-NET-MVC%E4%BD%BF%E7%94%A8EPPlus%EF%BC%8C%E5%AF%BC%E5%87%BA%E6%95%B0%E6%8D%AE%E5%88%B0Excel/"/>
    <id>http://haimianbao1111.github.io/2018/03/02/ASP-NET-MVC使用EPPlus，导出数据到Excel/</id>
    <published>2018-03-02T02:35:56.000Z</published>
    <updated>2018-03-02T03:00:27.071Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h1><p>如何导出数据到Excel文件中，这里我使用的是免费开源的Epplus组件。<br>源代码下载：<a href="https://github.com/caofangsheng93/ExcelExportInMvc" target="_blank" rel="noopener">https://github.com/caofangsheng93/ExcelExportInMvc</a></p><h1 id="2-介绍"><a href="#2-介绍" class="headerlink" title="2.介绍"></a>2.介绍</h1><p>这篇文章，介绍的是怎样导出数据到Excel文件中，大多数的后端程序都有报表功能：把显示在Grid中的数据导出到Excel文件中，这篇文章中使用的是EPPlus组件。</p><p>EPPlus是一个基于OOXML<br>【Open Extended Markup Language】 格式的，操作Excel表格的类库。OOXML是由微软开发的。默认支持微软的Office。</p><p>开源网站：<a href="http://epplus.codeplex.com/" target="_blank" rel="noopener">http://epplus.codeplex.com/</a></p><h1 id="3-正文"><a href="#3-正文" class="headerlink" title="3.正文"></a>3.正文</h1><p><img src="/images/mvc/mvc1.png" class="full-image"><br>首先我们需要引入：EPPlus。<br><img src="/images/mvc/mvc2.png" class="full-image"></p><h2 id="实现步骤："><a href="#实现步骤：" class="headerlink" title="实现步骤："></a>实现步骤：</h2><h2 id="1-数据：这里我使用静态数据，来确保这篇文章尽可能通俗易懂。"><a href="#1-数据：这里我使用静态数据，来确保这篇文章尽可能通俗易懂。" class="headerlink" title="1.数据：这里我使用静态数据，来确保这篇文章尽可能通俗易懂。"></a>1.数据：这里我使用静态数据，来确保这篇文章尽可能通俗易懂。</h2><h2 id="2-集合：静态数据保存在集合中"><a href="#2-集合：静态数据保存在集合中" class="headerlink" title="2.集合：静态数据保存在集合中"></a>2.集合：静态数据保存在集合中</h2><h2 id="3-DataTable：转化泛型集合的数据，保存到DataTable中"><a href="#3-DataTable：转化泛型集合的数据，保存到DataTable中" class="headerlink" title="3.DataTable：转化泛型集合的数据，保存到DataTable中"></a>3.DataTable：转化泛型集合的数据，保存到DataTable中</h2><h2 id="4-导出文件：DataTable导出为Excel"><a href="#4-导出文件：DataTable导出为Excel" class="headerlink" title="4.导出文件：DataTable导出为Excel"></a>4.导出文件：DataTable导出为Excel</h2><p>首先，我们创建一个类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">public class Student</span><br><span class="line">&#123;</span><br><span class="line">    public int ID &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Sex &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public int Age &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    public string Email &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Student</span><br></pre></td></tr></table></figure></p><p>然后创建一个静态数据类：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">public class StaticDataOfStudent</span><br><span class="line">&#123;</span><br><span class="line">    public static List&lt;Student&gt; ListStudent</span><br><span class="line">    &#123;</span><br><span class="line">        get </span><br><span class="line">        &#123;</span><br><span class="line">            return new List&lt;Student&gt;() </span><br><span class="line">            &#123;</span><br><span class="line">                new Student()&#123;ID=1,Name=&quot;曹操&quot;,Sex=&quot;男&quot;,Email=&quot;caocao@163.com&quot;,Age=24&#125;,</span><br><span class="line">                new Student()&#123;ID=2,Name=&quot;李易峰&quot;,Sex=&quot;女&quot;,Email=&quot;lilingjie@sina.com.cn&quot;,Age=24&#125;,</span><br><span class="line">                new Student()&#123;ID=3,Name=&quot;张三丰&quot;,Sex=&quot;男&quot;,Email=&quot;zhangsanfeng@qq.com&quot;,Age=224&#125;,</span><br><span class="line">                new Student()&#123;ID=4,Name=&quot;孙权&quot;,Sex=&quot;男&quot;,Email=&quot;sunquan@163.com&quot;,Age=1224&#125;,</span><br><span class="line">            &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">StaticDataOfStudent</span><br></pre></td></tr></table></figure></p><p>然后就是我们的导出Excel帮助类了：<br>    /// <summary><br>    /// Excel导出帮助类<br>    /// </summary><br>    public class ExcelExportHelper<br>    {<br>        public static string ExcelContentType<br>        {<br>            get<br>            {<br>                return “application/vnd.openxmlformats-officedocument.spreadsheetml.sheet”;<br>            }<br>        }</p><pre><code>    /// &lt;summary&gt;    /// List转DataTable    /// &lt;/summary&gt;    /// &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;    /// &lt;param name=&quot;data&quot;&gt;&lt;/param&gt;    /// &lt;returns&gt;&lt;/returns&gt;    public static DataTable ListToDataTable&lt;T&gt;(List&lt;T&gt; data)    {        PropertyDescriptorCollection properties = TypeDescriptor.GetProperties(typeof(T));        DataTable dataTable = new DataTable();        for (int i = 0; i &lt; properties.Count; i++)        {            PropertyDescriptor property = properties[i];              dataTable.Columns.Add(property.Name, Nullable.GetUnderlyingType(property.PropertyType) ?? property.PropertyType);          }        object[] values = new object[properties.Count];        foreach (T item in data)        {            for (int i = 0; i &lt; values.Length; i++)            {                values[i] = properties[i].GetValue(item);            }            dataTable.Rows.Add(values);        }        return dataTable;      }    /// &lt;summary&gt;    /// 导出Excel    /// &lt;/summary&gt;    /// &lt;param name=&quot;dataTable&quot;&gt;数据源&lt;/param&gt;    /// &lt;param name=&quot;heading&quot;&gt;工作簿Worksheet&lt;/param&gt;    /// &lt;param name=&quot;showSrNo&quot;&gt;//是否显示行编号&lt;/param&gt;    /// &lt;param name=&quot;columnsToTake&quot;&gt;要导出的列&lt;/param&gt;    /// &lt;returns&gt;&lt;/returns&gt;    public static byte[] ExportExcel(DataTable dataTable, string heading = &quot;&quot;, bool showSrNo = false, params string[] columnsToTake)    {        byte[] result = null;        using(ExcelPackage package=new ExcelPackage())        {            ExcelWorksheet workSheet = package.Workbook.Worksheets.Add(string.Format(&quot;{0}Data&quot;, heading));            int startRowFrom = string.IsNullOrEmpty(heading) ? 1 : 3;  //开始的行            //是否显示行编号            if (showSrNo)            {                DataColumn dataColumn = dataTable.Columns.Add(&quot;#&quot;, typeof(int));                dataColumn.SetOrdinal(0);                int index = 1;                foreach (DataRow item in dataTable.Rows)                {                    item[0] = index;                    index++;                }            }            //Add Content Into the Excel File            workSheet.Cells[&quot;A&quot; + startRowFrom].LoadFromDataTable(dataTable, true);            // autofit width of cells with small content              int columnIndex = 1;            foreach (DataColumn item in dataTable.Columns)            {                ExcelRange columnCells = workSheet.Cells[workSheet.Dimension.Start.Row, columnIndex, workSheet.Dimension.End.Row, columnIndex];                  int maxLength = columnCells.Max(cell =&gt; cell.Value.ToString().Count());                  if (maxLength &lt; 150)                  {                      workSheet.Column(columnIndex).AutoFit();                  }                  columnIndex++;              }            // format header - bold, yellow on black              using (ExcelRange r = workSheet.Cells[startRowFrom, 1, startRowFrom, dataTable.Columns.Count])            {                r.Style.Font.Color.SetColor(System.Drawing.Color.White);                r.Style.Font.Bold = true;                r.Style.Fill.PatternType = OfficeOpenXml.Style.ExcelFillStyle.Solid;                r.Style.Fill.BackgroundColor.SetColor(System.Drawing.ColorTranslator.FromHtml(&quot;#1fb5ad&quot;));            }            // format cells - add borders              using (ExcelRange r = workSheet.Cells[startRowFrom + 1, 1, startRowFrom + dataTable.Rows.Count, dataTable.Columns.Count])            {                r.Style.Border.Top.Style = ExcelBorderStyle.Thin;                r.Style.Border.Bottom.Style = ExcelBorderStyle.Thin;                r.Style.Border.Left.Style = ExcelBorderStyle.Thin;                r.Style.Border.Right.Style = ExcelBorderStyle.Thin;                r.Style.Border.Top.Color.SetColor(System.Drawing.Color.Black);                r.Style.Border.Bottom.Color.SetColor(System.Drawing.Color.Black);                r.Style.Border.Left.Color.SetColor(System.Drawing.Color.Black);                r.Style.Border.Right.Color.SetColor(System.Drawing.Color.Black);            }            // removed ignored columns              for (int i = dataTable.Columns.Count - 1; i &gt;= 0; i--)            {                if (i == 0 &amp;&amp; showSrNo)                {                    continue;                }                if (!columnsToTake.Contains(dataTable.Columns[i].ColumnName))                {                    workSheet.DeleteColumn(i + 1);                }            }            if (!String.IsNullOrEmpty(heading))            {                workSheet.Cells[&quot;A1&quot;].Value = heading;                workSheet.Cells[&quot;A1&quot;].Style.Font.Size = 20;                workSheet.InsertColumn(1, 1);                workSheet.InsertRow(1, 1);                workSheet.Column(1).Width = 5;            }            result = package.GetAsByteArray();          }        return result;    }    /// &lt;summary&gt;    /// 导出Excel    /// &lt;/summary&gt;    /// &lt;typeparam name=&quot;T&quot;&gt;&lt;/typeparam&gt;    /// &lt;param name=&quot;data&quot;&gt;&lt;/param&gt;    /// &lt;param name=&quot;heading&quot;&gt;&lt;/param&gt;    /// &lt;param name=&quot;isShowSlNo&quot;&gt;&lt;/param&gt;    /// &lt;param name=&quot;ColumnsToTake&quot;&gt;&lt;/param&gt;    /// &lt;returns&gt;&lt;/returns&gt;    public static byte[] ExportExcel&lt;T&gt;(List&lt;T&gt; data, string heading = &quot;&quot;, bool isShowSlNo = false, params string[] ColumnsToTake)    {        return ExportExcel(ListToDataTable&lt;T&gt;(data), heading, isShowSlNo, ColumnsToTake);      }}</code></pre><p>到此为止，后端服务器的代码，基本搞完，现在开始设计我们的前端代码：</p><p>我们创建一个ViewModel，用来显示数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">public class StudentViewModel</span><br><span class="line">&#123;</span><br><span class="line">    public List&lt;Student&gt; ListStudent</span><br><span class="line">    &#123;</span><br><span class="line">        get </span><br><span class="line">        &#123;</span><br><span class="line">            return StaticDataOfStudent.ListStudent;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后创建一个控制器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">public class HomeController : Controller</span><br><span class="line">&#123;</span><br><span class="line">    // GET: Home</span><br><span class="line">    public ActionResult Index()</span><br><span class="line">    &#123;</span><br><span class="line">        StudentViewModel model = new StudentViewModel();</span><br><span class="line">        return View(model);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public FileContentResult ExportToExcel()</span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;Student&gt; lstStudent = StaticDataOfStudent.ListStudent;</span><br><span class="line">        string[] columns = &#123; &quot;ID&quot;, &quot;Name&quot;,&quot;Age&quot;&#125;;</span><br><span class="line">        byte[] filecontent = ExcelExportHelper.ExportExcel(lstStudent,&quot;&quot;, false, columns);</span><br><span class="line">        return File(filecontent, ExcelExportHelper.ExcelContentType, &quot;MyStudent.xlsx&quot;);  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>视图代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">@model ExportToExcel.Models.StudentViewModel</span><br><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = &quot;Excel文件导出&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;div class=&quot;panel&quot;&gt;</span><br><span class="line">    &lt;div class=&quot;panel-heading&quot;&gt;</span><br><span class="line">        &lt;a href=&quot;@Url.Action(&quot;ExportToExcel&quot;)&quot; class=&quot;btn btn-primary&quot;&gt;Export&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;panel-body&quot;&gt;</span><br><span class="line">        &lt;table class=&quot;table table-striped table-bordered&quot;&gt;</span><br><span class="line">            &lt;thead&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;th&gt;ID&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;Name&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;Sex&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;Age&lt;/th&gt;</span><br><span class="line">                    &lt;th&gt;Email&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/thead&gt;</span><br><span class="line">            &lt;tbody&gt;</span><br><span class="line">                @foreach (var item in Model.ListStudent)</span><br><span class="line">                &#123;</span><br><span class="line">                    &lt;tr&gt;</span><br><span class="line">                        &lt;td&gt;@item.ID&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@item.Name&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@item.Sex&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@item.Age&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@item.Email&lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &#125;</span><br><span class="line">            &lt;/tbody&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>效果图：<br><img src="/images/mvc/mvc3.png" class="full-image"><br>点击Export之后，就导出了Excel文件到浏览器中：打开之后。<br><img src="/images/mvc/mvc4.png" class="full-image"></p><p>总结：这个导出帮助类，可以定制导出那些列。<br>这里我只是导出这三列。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string[] columns = &#123; &quot;ID&quot;, &quot;Name&quot;,&quot;Age&quot;&#125;;</span><br><span class="line">byte[] filecontent = ExcelExportHelper.ExportExcel(lstStudent,&quot;&quot;, false, columns);</span><br><span class="line">return File(filecontent, ExcelExportHelper.ExcelContentType, &quot;MyStudent.xlsx&quot;);</span><br></pre></td></tr></table></figure></p><p>类似资料参考：<a href="http://www.cnblogs.com/liudeyun/p/3535740.html" target="_blank" rel="noopener">http://www.cnblogs.com/liudeyun/p/3535740.html</a></p><div class="note success"><p>本文转自： <a href="http://www.cnblogs.com/caofangsheng/p/6149843.html" target="_blank" rel="noopener">http://www.cnblogs.com/caofangsheng/p/6149843.html</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.概述&quot;&gt;&lt;/a&gt;1.概述&lt;/h1&gt;&lt;p&gt;如何导出数据到Excel文件中，这里我使用的是免费开源的Epplus组件。&lt;br&gt;源代码下载：&lt;a href=&quot;https:
      
    
    </summary>
    
      <category term="Asp.Net Mvc" scheme="http://haimianbao1111.github.io/categories/Asp-Net-Mvc/"/>
    
    
      <category term="Asp.Net Mvc,Excel" scheme="http://haimianbao1111.github.io/tags/Asp-Net-Mvc-Excel/"/>
    
  </entry>
  
  <entry>
    <title>win10 系统win键不能用</title>
    <link href="http://haimianbao1111.github.io/2018/03/02/win10-%E7%B3%BB%E7%BB%9Fwin%E9%94%AE%E4%B8%8D%E8%83%BD%E7%94%A8/"/>
    <id>http://haimianbao1111.github.io/2018/03/02/win10-系统win键不能用/</id>
    <published>2018-03-02T02:23:29.000Z</published>
    <updated>2018-03-02T03:00:28.846Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h1><p>升级Windows10正式版后，还是存在好多问题，最多的问题就是驱动兼容的问题，但今天三皮碰到的这个问题不是驱动问题，而Windows10的一个BUG吧，这个只发生在笔记本电脑上，升级安装Win10后，笔记本触控板没问题，但笔记本键盘失灵没反应、无效不能用。原来我以为是笔记本键盘的驱动兼容问题，所以去查看了笔记本的驱动，一切正常，后来才发现是Windows关机设置中启用快速启动的BUG。</p><p>不管是升级还是全新安装，只要是笔记本电脑，这个项目都是默认勾选上了的。所以导致有些笔记本电脑键盘失效不能用。</p><h1 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2.解决方法"></a>2.解决方法</h1><h2 id="在任务栏上点击笔记本特有的电源图标。"><a href="#在任务栏上点击笔记本特有的电源图标。" class="headerlink" title="在任务栏上点击笔记本特有的电源图标。"></a>在任务栏上点击笔记本特有的电源图标。</h2><p><img src="/images/win10/win10-1.png" class="full-image"></p><h2 id="弹出菜单中点击【电源和睡眠设置】。"><a href="#弹出菜单中点击【电源和睡眠设置】。" class="headerlink" title="弹出菜单中点击【电源和睡眠设置】。"></a>弹出菜单中点击【电源和睡眠设置】。</h2><p><img src="/images/win10/win10-2.png" class="full-image"></p><h2 id="在相关设置中选择【其他电脑设置】。"><a href="#在相关设置中选择【其他电脑设置】。" class="headerlink" title="在相关设置中选择【其他电脑设置】。"></a>在相关设置中选择【其他电脑设置】。</h2><p><img src="/images/win10/win10-3.png" class="full-image"></p><h2 id="进入电源选项，点击【选择电源按钮的功能】"><a href="#进入电源选项，点击【选择电源按钮的功能】" class="headerlink" title="进入电源选项，点击【选择电源按钮的功能】"></a>进入电源选项，点击【选择电源按钮的功能】</h2><p><img src="/images/win10/win10-4.png" class="full-image"></p><h2 id="注意，这里需要点击【更改当前不可用的设置】然后下面的选项才可以修改，不然是灰色的点不动。"><a href="#注意，这里需要点击【更改当前不可用的设置】然后下面的选项才可以修改，不然是灰色的点不动。" class="headerlink" title="注意，这里需要点击【更改当前不可用的设置】然后下面的选项才可以修改，不然是灰色的点不动。"></a>注意，这里需要点击【更改当前不可用的设置】然后下面的选项才可以修改，不然是灰色的点不动。</h2><p><img src="/images/win10/win10-5.png" class="full-image"></p><h2 id="这里截出系统原来默认选项，在启用快速启动（推荐）前面是打√的。"><a href="#这里截出系统原来默认选项，在启用快速启动（推荐）前面是打√的。" class="headerlink" title="这里截出系统原来默认选项，在启用快速启动（推荐）前面是打√的。"></a>这里截出系统原来默认选项，在启用快速启动（推荐）前面是打√的。</h2><p><img src="/images/win10/win10-6.png" class="full-image"></p><h2 id="将这个√去掉，然后保存修改。"><a href="#将这个√去掉，然后保存修改。" class="headerlink" title="将这个√去掉，然后保存修改。"></a>将这个√去掉，然后保存修改。</h2><p><img src="/images/win10/win10-7.png" class="full-image"></p><h2 id="现在重启电脑，键盘就可以使用的了。"><a href="#现在重启电脑，键盘就可以使用的了。" class="headerlink" title="现在重启电脑，键盘就可以使用的了。"></a>现在重启电脑，键盘就可以使用的了。</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-概述&quot;&gt;&lt;a href=&quot;#1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.概述&quot;&gt;&lt;/a&gt;1.概述&lt;/h1&gt;&lt;p&gt;升级Windows10正式版后，还是存在好多问题，最多的问题就是驱动兼容的问题，但今天三皮碰到的这个问题不是驱动问题，而Wi
      
    
    </summary>
    
      <category term="系统" scheme="http://haimianbao1111.github.io/categories/%E7%B3%BB%E7%BB%9F/"/>
    
    
      <category term="系统" scheme="http://haimianbao1111.github.io/tags/%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>HTTP协议详解</title>
    <link href="http://haimianbao1111.github.io/2018/02/23/HTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
    <id>http://haimianbao1111.github.io/2018/02/23/HTTP协议详解/</id>
    <published>2018-02-23T15:49:44.000Z</published>
    <updated>2018-02-23T16:07:58.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>当今web程序的开发技术真是百家争鸣，ASP.NET, PHP, JSP，Perl, AJAX 等等。 无论Web技术在未来如何发展，理解Web程序之间通信的基本协议相当重要, 因为它让我们理解了Web应用程序的内部工作. 本文将对HTTP协议进行详细的实例讲解，内容较多，希望大家耐心看。也希望对大家的开发工作或者测试工作有所帮助。使用Fiddler工具非常方便地捕获HTTP Request和HTTP Response,  关于Fiddler工具的用法，请看我另一篇博客<br><a href="http://www.cnblogs.com/TankXiao/archive/2012/02/06/2337728.html" target="_blank" rel="noopener">[Fiddler 教程]</a></p><h1 id="阅读目录"><a href="#阅读目录" class="headerlink" title="阅读目录"></a>阅读目录</h1><h2 id="1-协议详解"><a href="#1-协议详解" class="headerlink" title="1. 协议详解"></a>1. 协议详解</h2><p><a href="http://www.cnblogs.com/TankXiao/archive/2012/02/13/2342672.html" target="_blank" rel="noopener"> HTTP协议 (一) HTTP协议详解</a></p><h2 id="2-基本认证"><a href="#2-基本认证" class="headerlink" title="2.基本认证"></a>2.基本认证</h2><p><a href="">HTTP协议 (二) 基本认证</a></p><h2 id="3-压缩"><a href="#3-压缩" class="headerlink" title="3.压缩"></a>3.压缩</h2><p><a href="">HTTP协议 (三) 压缩</a></p><h2 id="4-缓存"><a href="#4-缓存" class="headerlink" title="4.缓存"></a>4.缓存</h2><p><a href="http://www.cnblogs.com/TankXiao/archive/2012/11/28/2793365.html" target="_blank" rel="noopener">HTTP协议 (四) 缓存</a></p><h2 id="5-代理"><a href="#5-代理" class="headerlink" title="5.代理"></a>5.代理</h2><p><a href="http://www.cnblogs.com/TankXiao/archive/2012/12/12/2794160.html" target="_blank" rel="noopener">HTTP协议 (五) 代理</a></p><h2 id="6-状态码详解"><a href="#6-状态码详解" class="headerlink" title="6.状态码详解"></a>6.状态码详解</h2><p><a href="http://www.cnblogs.com/TankXiao/archive/2013/01/08/2818542.html" target="_blank" rel="noopener">HTTP协议 (六) 状态码详解</a></p><h2 id="7-Cookie"><a href="#7-Cookie" class="headerlink" title="7.Cookie"></a>7.Cookie</h2><p><a href="http://www.cnblogs.com/TankXiao/archive/2013/04/15/2848906.html" target="_blank" rel="noopener">HTTP协议 (七) Cookie</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;当今web程序的开发技术真是百家争鸣，ASP.NET, PHP, JSP，Perl, AJAX 等等。 无论Web技术在未来如何发展，理解W
      
    
    </summary>
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/categories/Asp-Net/"/>
    
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/tags/Asp-Net/"/>
    
  </entry>
  
  <entry>
    <title>图片背景自适应</title>
    <link href="http://haimianbao1111.github.io/2018/02/23/%E5%9B%BE%E7%89%87%E8%83%8C%E6%99%AF%E8%87%AA%E9%80%82%E5%BA%94/"/>
    <id>http://haimianbao1111.github.io/2018/02/23/图片背景自适应/</id>
    <published>2018-02-23T12:25:08.000Z</published>
    <updated>2018-02-23T12:27:29.049Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>最近在做一个项目，要求实现背景自适应，何为背景自适应呢？</p><p>1.如果背景图高度不够，background-size就应该是 auto 100%</p><p>2.如果背景图宽度不够，background-size就应该是100% auto </p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">        &lt;meta name=&quot;viewport&quot; id=&quot;viewport&quot; content=&quot;target-densitydpi=1,width=device-width,user-scalable=no,initial-scale=1,minimum-scale=1&quot; /&gt;</span><br><span class="line">        &lt;title&gt;&lt;/title&gt;</span><br><span class="line">        &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">            div &#123;</span><br><span class="line">                position: fixed;</span><br><span class="line">                top: 0;</span><br><span class="line">                left: 0;</span><br><span class="line">                bottom: 0;</span><br><span class="line">                right: 0;</span><br><span class="line">                background-image: url(https://bpic.588ku.com/original_origin_min_pic/17/11/28/d2eb2117633c1138cc967a2e7a71ab78.jpg!ww1200);</span><br><span class="line">                background-position: center 0;</span><br><span class="line">                background-repeat: no-repeat;</span><br><span class="line">                background-size: 100% auto;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/style&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line"></span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        &lt;div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;script src=&quot;js/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">        &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">            var bg_auto_size = function(src) &#123;</span><br><span class="line">                var dh = document.documentElement.clientHeight;</span><br><span class="line">                var dw = document.documentElement.clientWidth;</span><br><span class="line">                var img_url = src;</span><br><span class="line">                var img = new Image();</span><br><span class="line">                img.src = img_url;</span><br><span class="line">                img.onload = function() &#123;</span><br><span class="line">                    var dRatio = dw / dh;</span><br><span class="line">                    var imgRatio = img.width / img.height;</span><br><span class="line">                    if(dRatio &lt;= imgRatio) &#123;</span><br><span class="line">                        $(&apos;div&apos;).css(&#123; &apos;background-size&apos;: &apos;auto 100%&apos;, &apos;background-position&apos;: &apos;center 0&apos; &#125;);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $(&apos;div&apos;).css(&#123; &apos;background-size&apos;: &apos;100% auto&apos;, &apos;background-position&apos;: &apos;center 0&apos; &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;;</span><br><span class="line">            //这个图片的地址必须是绝对路径，如果用相对路径就会报错，文件识别不出，下面路径是我随便找的，不是实际背景的真实绝对路径</span><br><span class="line">            var bg = &apos;https://bpic.588ku.com/original_origin_min_pic/17/11/28/d2eb2117633c1138cc967a2e7a71ab78.jpg!ww1200&apos;;</span><br><span class="line">            bg_auto_size(bg);</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;最近在做一个项目，要求实现背景自适应，何为背景自适应呢？&lt;/p&gt;
&lt;p&gt;1.如果背景图高度不够，background-size就应该是 au
      
    
    </summary>
    
      <category term="前端" scheme="http://haimianbao1111.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="js,前端" scheme="http://haimianbao1111.github.io/tags/js-%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>.Net Core 学习</title>
    <link href="http://haimianbao1111.github.io/2018/02/14/Net-Core-%E5%AD%A6%E4%B9%A0/"/>
    <id>http://haimianbao1111.github.io/2018/02/14/Net-Core-学习/</id>
    <published>2018-02-14T15:42:07.000Z</published>
    <updated>2018-02-14T15:48:20.316Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-概述"><a href="#一-概述" class="headerlink" title="一.概述"></a>一.概述</h1><p>大型分布式互联网架构开发实战（Docker + SSO + TDD + RabbitMQ + Redis + InfluxDb + Grafana + Metrics + 新一代.NET Core on Linux……），屏幕录制讲解+ 微信群解答两种方式，课程简介 ：<br><a href="http://video.jessetalk.cn/course/5" target="_blank" rel="noopener">http://video.jessetalk.cn/course/5</a><br>注册时填写 优惠码 3QK54 可获得50元代金券，相当于298-50=248元：<br><a href="http://video.jessetalk.cn/register?inviteCode=3QK54" target="_blank" rel="noopener">http://video.jessetalk.cn/register?inviteCode=3QK54</a></p><h1 id="二-笔记"><a href="#二-笔记" class="headerlink" title="二.笔记"></a>二.笔记</h1><h2 id="1-正在学习ing"><a href="#1-正在学习ing" class="headerlink" title="1. 正在学习ing"></a>1. 正在学习ing</h2><h2 id="2-略………"><a href="#2-略………" class="headerlink" title="2. 略………"></a>2. 略………</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一-概述&quot;&gt;&lt;a href=&quot;#一-概述&quot; class=&quot;headerlink&quot; title=&quot;一.概述&quot;&gt;&lt;/a&gt;一.概述&lt;/h1&gt;&lt;p&gt;大型分布式互联网架构开发实战（Docker + SSO + TDD + RabbitMQ + Redis + InfluxD
      
    
    </summary>
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/categories/Asp-Net/"/>
    
    
      <category term="Asp.Net,.Net Core" scheme="http://haimianbao1111.github.io/tags/Asp-Net-Net-Core/"/>
    
  </entry>
  
  <entry>
    <title>一些代码记录</title>
    <link href="http://haimianbao1111.github.io/2018/02/14/%E4%B8%80%E4%BA%9B%E4%BB%A3%E7%A0%81%E8%AE%B0%E5%BD%95/"/>
    <id>http://haimianbao1111.github.io/2018/02/14/一些代码记录/</id>
    <published>2018-02-14T04:10:00.000Z</published>
    <updated>2018-03-09T03:05:15.039Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-int-TryParse"><a href="#1-int-TryParse" class="headerlink" title="1.int.TryParse"></a>1.int.TryParse</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 批量删除</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;param name=&quot;ids&quot;&gt;&lt;/param&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public ActionResult Delete(string ids)</span><br><span class="line">&#123;</span><br><span class="line">    int success = 0;</span><br><span class="line">    string[] ss = ids.Split(&apos;,&apos;);</span><br><span class="line">    foreach (var item in ss)</span><br><span class="line">    &#123;</span><br><span class="line">        int x;</span><br><span class="line">        if (int.TryParse(item, out x))</span><br><span class="line">        &#123;</span><br><span class="line">            VideoDAL.Delete(x);</span><br><span class="line">            success++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return Content(&quot;成功删除&quot; + success + &quot;条记录！&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-ValidateAntiForgeryToken"><a href="#2-ValidateAntiForgeryToken" class="headerlink" title="2.[ValidateAntiForgeryToken]"></a>2.[ValidateAntiForgeryToken]</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[ValidateAntiForgeryToken]</span><br><span class="line">[HttpPost]</span><br><span class="line">public ActionResult Add(VideoMDL model)</span><br><span class="line">&#123;</span><br><span class="line">    if (model.id == 0)</span><br><span class="line">    &#123;</span><br><span class="line">        VideoDAL.Insert(model);</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">    VideoDAL.Update(model);</span><br><span class="line">    &#125;</span><br><span class="line">    return Redirect(&quot;/System/VideoManager/&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用方法：<a href="https://www.cnblogs.com/hechunming/p/4647646.html" target="_blank" rel="noopener">https://www.cnblogs.com/hechunming/p/4647646.html</a></p><h1 id="3-string-Join-“-”-keys-ToArray"><a href="#3-string-Join-“-”-keys-ToArray" class="headerlink" title="3.string.Join(“,”, keys.ToArray())"></a>3.string.Join(“,”, keys.ToArray())</h1><p>使用方法：<a href="https://www.cnblogs.com/honghong75042/p/7047817.html" target="_blank" rel="noopener">https://www.cnblogs.com/honghong75042/p/7047817.html</a></p><h1 id="4-jquery绑定事件只执行一次"><a href="#4-jquery绑定事件只执行一次" class="headerlink" title="4.jquery绑定事件只执行一次"></a>4.jquery绑定事件只执行一次</h1><h2 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; value=&quot;&quot; name=&quot;logo_name&quot; id=&quot;logo_name&quot;/&gt;</span><br><span class="line"></span><br><span class="line">$(document).off(&apos;change&apos;,&apos;#logo_name&apos;).on(&apos;change&apos;,&apos;#logo_name&apos;,function()&#123;</span><br><span class="line">    alert(&quot;ok&quot;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>on是绑定了结点，jquery绑定结点的时候只需绑定一次就行了。不能重复绑定，off是将结点移除，移除完之后在重新绑定，这样就可以解决了change执行一次的问题.</p><h1 id="5-其他技巧"><a href="#5-其他技巧" class="headerlink" title="5.其他技巧"></a>5.其他技巧</h1><h2 id="待补充…"><a href="#待补充…" class="headerlink" title="待补充…"></a>待补充…</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-int-TryParse&quot;&gt;&lt;a href=&quot;#1-int-TryParse&quot; class=&quot;headerlink&quot; title=&quot;1.int.TryParse&quot;&gt;&lt;/a&gt;1.int.TryParse&lt;/h1&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="C#" scheme="http://haimianbao1111.github.io/categories/C/"/>
    
    
      <category term="C#,小技巧" scheme="http://haimianbao1111.github.io/tags/C-%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Hexo 使用过程遇到的问题</title>
    <link href="http://haimianbao1111.github.io/2018/02/12/Hexo-%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://haimianbao1111.github.io/2018/02/12/Hexo-使用过程遇到的问题/</id>
    <published>2018-02-12T09:30:40.000Z</published>
    <updated>2018-02-12T09:48:54.605Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="问题描述：-在hexo下新建一个MD文件，出现Template-render-error-unknown-path"><a href="#问题描述：-在hexo下新建一个MD文件，出现Template-render-error-unknown-path" class="headerlink" title="问题描述： 在hexo下新建一个MD文件，出现Template render error: unknown path?"></a>问题描述： 在hexo下新建一个MD文件，出现Template render error: unknown path?</h2><h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个是hexo转义时候发生的错误，你文章中可能出现了&#123;&#123;&#125;&#125;，&#123;% %&#125;。你可以将出现的代码，用 `进行注释下就可以了.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;问题描述：-在hexo下新建一个MD文件，出现Template-render-error-unknown-path&quot;&gt;&lt;a hre
      
    
    </summary>
    
      <category term="Hexo" scheme="http://haimianbao1111.github.io/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://haimianbao1111.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>C#基础--浅谈XML读取以及简单的ORM实现</title>
    <link href="http://haimianbao1111.github.io/2018/02/12/C-%E5%9F%BA%E7%A1%80-%E6%B5%85%E8%B0%88XML%E8%AF%BB%E5%8F%96%E4%BB%A5%E5%8F%8A%E7%AE%80%E5%8D%95%E7%9A%84ORM%E5%AE%9E%E7%8E%B0/"/>
    <id>http://haimianbao1111.github.io/2018/02/12/C-基础-浅谈XML读取以及简单的ORM实现/</id>
    <published>2018-02-12T08:15:08.000Z</published>
    <updated>2018-02-12T09:27:12.377Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>背景: 在开发ASP.NETMVC4 项目中,虽然web.config配置满足了大部分需求,不过对于某些特定业务,我们有时候需要添加新的配置文件来记录配置信息,那么XML文件配置无疑是我们选择的一个方案之一。下面简单谈谈XML的读取。</p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="一-xml-linq读取xml"><a href="#一-xml-linq读取xml" class="headerlink" title="一.xml.linq读取xml"></a>一.xml.linq读取xml</h2><p>1.新建一个data.XML文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;Customers&gt;</span><br><span class="line">  &lt;Customer&gt;</span><br><span class="line">    &lt;Name&gt;Frank&lt;/Name&gt;</span><br><span class="line">    &lt;City&gt;成都&lt;/City&gt;</span><br><span class="line">    &lt;Contact&gt;2233&lt;/Contact&gt;</span><br><span class="line">  &lt;/Customer&gt;</span><br><span class="line">  &lt;Customer&gt;</span><br><span class="line">    &lt;Name&gt;Vincent&lt;/Name&gt;</span><br><span class="line">    &lt;City&gt;美国&lt;/City&gt;</span><br><span class="line">    &lt;Contact&gt;4455&lt;/Contact&gt;</span><br><span class="line">  &lt;/Customer&gt;</span><br><span class="line">&lt;/Customers&gt;</span><br></pre></td></tr></table></figure></p><p>2.新建customer实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public class Customers</span><br><span class="line">&#123;</span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line">    public string City &#123; get; set; &#125;</span><br><span class="line">    public string Contact &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>3.System.Xml.Linq 域名. 就可以轻松将customer信息读取完毕。XDocument.Load读取xml文件. Descendants可以读取Customer节点返回一个集合.再通过Linq的select方法.读取每个Customer节点数据,转换成List<customer>对象<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">var customsers = XDocument.Load(&quot;data.xml&quot;).Descendants(&quot;Customer&quot;)</span><br><span class="line">        .Select(x =&gt; new Customers()</span><br><span class="line">        &#123;</span><br><span class="line">            Name = x.Element(&quot;Name&quot;).Value,</span><br><span class="line">            City = x.Element(&quot;City&quot;).Value,</span><br><span class="line">            Contact = x.Element(&quot;Contact&quot;).Value,</span><br><span class="line">        &#125;).ToList();</span><br></pre></td></tr></table></figure></customer></p><h1 id="二-简单的ORM"><a href="#二-简单的ORM" class="headerlink" title="二. 简单的ORM"></a>二. 简单的ORM</h1><p>上面介绍了XML的读取,那XML读取有没有可以更简单的方式呢. 比如类似于Database的ORM框架. 只需要实体名称与DB SQL的select字段名称一样就会自动映射到实体上面。不需要我们去写代码一个一个去Element上取。 下面我们就来简单实现一个。下面代码只是提供思路:<br>其实我们可以通过反射和打标签来实现, 大家有空不妨去看看小弟写得两篇 打标签和反射的文章。<br><a href="http://www.cnblogs.com/FourLeafCloverZc/p/4055067.html" target="_blank" rel="noopener">C#基础—Attribute(标签） 和 reflect（反射) 应用</a><br><a href="http://www.cnblogs.com/FourLeafCloverZc/p/4287114.html" target="_blank" rel="noopener">C#基础—Attribute(标签） 和 reflect（反射) 应用二</a></p><h2 id="1-新建XmlAttribute类。"><a href="#1-新建XmlAttribute类。" class="headerlink" title="1.新建XmlAttribute类。"></a>1.新建XmlAttribute类。</h2><p>提供了ElementName属性用于标记实体类字段对应的xml节点<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class XmlAttribute : Attribute</span><br><span class="line">&#123;</span><br><span class="line">    public string ElementName</span><br><span class="line">    &#123;</span><br><span class="line">        get;</span><br><span class="line">        set;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-修改新建的Customler类"><a href="#2-修改新建的Customler类" class="headerlink" title="2. 修改新建的Customler类."></a>2. 修改新建的Customler类.</h2><p>ElementName 对应的xml节点名称, 因为有可能开发者xml节点名称和实体名称不一样。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public class Customers</span><br><span class="line">&#123;</span><br><span class="line">    [Xml(ElementName = &quot;Name&quot;)]</span><br><span class="line">    public string Name &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Xml(ElementName = &quot;City&quot;)]</span><br><span class="line">    public string City &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">    [Xml(ElementName = &quot;Contact&quot;)]</span><br><span class="line">    public string Contact &#123; get; set; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="3-提供XmlReader类-用于读取xml数据"><a href="#3-提供XmlReader类-用于读取xml数据" class="headerlink" title="3. 提供XmlReader类,用于读取xml数据"></a>3. 提供XmlReader类,用于读取xml数据</h2><p>(1).先通过反射读取实体,比如Customer类的 字段名称和对应的xml节点名称存入到dic 字典里面.<br>(2).遍历字段，取值赋给实体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">public class XmlReader</span><br><span class="line">   &#123;</span><br><span class="line">       public static List&lt;T&gt; ReadList&lt;T&gt;(string filePath,string rootName) where T:class,new ()</span><br><span class="line">       &#123;</span><br><span class="line">           List&lt;PropertyInfo&gt; propertyInfos = ((T)Activator.CreateInstance(typeof(T))).GetType().GetProperties().ToList();</span><br><span class="line">           List&lt;T&gt; result = new List&lt;T&gt;();</span><br><span class="line">           var xmlData = XDocument.Load(filePath);</span><br><span class="line"></span><br><span class="line">           //存储实体 属性名称--xml对应节点名称 的key-value值</span><br><span class="line">           Dictionary&lt;string, string&gt; dic = new Dictionary&lt;string, string&gt;();</span><br><span class="line">           propertyInfos</span><br><span class="line">               .ForEach(property =&gt;</span><br><span class="line">               &#123;</span><br><span class="line">                   var attribute = property.GetCustomAttribute(typeof(XmlAttribute)) as XmlAttribute;</span><br><span class="line">                   if (attribute != null)</span><br><span class="line">                   &#123;</span><br><span class="line">                       dic.Add(property.Name, attribute.ElementName);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;);</span><br><span class="line"></span><br><span class="line">           return xmlData</span><br><span class="line">               .Descendants(rootName)</span><br><span class="line">               .Select(element =&gt;</span><br><span class="line">               &#123;</span><br><span class="line">                   // 实例化一个对象</span><br><span class="line">                   var info = (T)Activator.CreateInstance(typeof(T));</span><br><span class="line"></span><br><span class="line">                   //遍历keyvalue字段,给实体每个字段赋值</span><br><span class="line">                   foreach (KeyValuePair&lt;string, string&gt; pair in dic)</span><br><span class="line">                   &#123;</span><br><span class="line">                       // 读取对象的filed标签</span><br><span class="line">                       var attr = info.GetType().GetProperty(pair.Key);</span><br><span class="line">                       attr.SetValue(info, element.Element(pair.Value).Value);</span><br><span class="line">                   &#125;</span><br><span class="line">                   return info;</span><br><span class="line">               &#125;).ToList();</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p><h2 id="4-下面看看结果吧-轻松读取数据了"><a href="#4-下面看看结果吧-轻松读取数据了" class="headerlink" title="4.下面看看结果吧, 轻松读取数据了"></a>4.下面看看结果吧, 轻松读取数据了</h2><p><img src="/images/xmlORM/xml1.png" class="full-image"></p><h1 id="三-总结"><a href="#三-总结" class="headerlink" title="三. 总结"></a>三. 总结</h1><p>本篇只是简简单单的谈了一下XML读取,xml的类型很多,比如在<customer name="frank">这些情况也没有考虑。此类情况如果要再次封装。就需要在XmlAttribute类新增一个AttributeName来实现。而且数据类型除开string,还有int，datetime等。以及xml的嵌套，多层解析xml数据等等。网上应该有很多读取xml的框架,我相信很多公司也会有自己的xml读取的框架。虽然没必要重造轮子。但是作为一个开发者还是可以去想想。如果自己要去开发这些公共框架，也应该知道怎么去做，知道可以通过什么方式去实现。</customer></p><div class="note success"><p>原文引自：<a href="http://www.cnblogs.com/FourLeafCloverZc/p/6565589.html" target="_blank" rel="noopener">http://www.cnblogs.com/FourLeafCloverZc/p/6565589.html</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;背景: 在开发ASP.NETMVC4 项目中,虽然web.config配置满足了大部分需求,不过对于某些特定业务,我们有时候需要添加新的配置
      
    
    </summary>
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/categories/Asp-Net/"/>
    
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/tags/Asp-Net/"/>
    
  </entry>
  
  <entry>
    <title>Select2下拉框总结</title>
    <link href="http://haimianbao1111.github.io/2018/02/12/Select2%E4%B8%8B%E6%8B%89%E6%A1%86%E6%80%BB%E7%BB%93/"/>
    <id>http://haimianbao1111.github.io/2018/02/12/Select2下拉框总结/</id>
    <published>2018-02-12T08:14:29.000Z</published>
    <updated>2018-02-12T09:45:26.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h1><p>组件说明以及API说明：<br><div class="note success"><p>Select2使用示例地址：<a href="https://select2.github.io/examples.html" target="_blank" rel="noopener">https://select2.github.io/examples.html</a></p><p>Select2参数文档说明：<a href="https://select2.github.io/options.html" target="_blank" rel="noopener">https://select2.github.io/options.html</a></p><p>Select2源码：<a href="https://github.com/select2/select2" target="_blank" rel="noopener">https://github.com/select2/select2</a></p></div></p><h1 id="二、组件特性效果展示"><a href="#二、组件特性效果展示" class="headerlink" title="二、组件特性效果展示"></a>二、组件特性效果展示</h1><h2 id="1、多选效果"><a href="#1、多选效果" class="headerlink" title="1、多选效果"></a>1、多选效果</h2><p><img src="/images/select2/select1.png" class="full-image"></p><h2 id="2、图文结合的效果"><a href="#2、图文结合的效果" class="headerlink" title="2、图文结合的效果"></a>2、图文结合的效果</h2><p><img src="/images/select2/select2.png" class="full-image"></p><h1 id="组件使用"><a href="#组件使用" class="headerlink" title="组件使用"></a>组件使用</h1><h2 id="1、文件需要引入select2-full-js、select2-min-css（4-0-1版本）和jquery-1-8-3及以上"><a href="#1、文件需要引入select2-full-js、select2-min-css（4-0-1版本）和jquery-1-8-3及以上" class="headerlink" title="1、文件需要引入select2.full.js、select2.min.css（4.0.1版本）和jquery.1.8.3及以上"></a>1、文件需要引入select2.full.js、select2.min.css（4.0.1版本）和jquery.1.8.3及以上</h2><p>最新版本的select2如果引用的jquery版本较低的话，某些功能无法正常使用。比如：清除功能allowClear: true</p><p>最新版本请使用标签</p><h2 id="2、placeholder"><a href="#2、placeholder" class="headerlink" title="2、placeholder"></a>2、placeholder</h2><p>placeholder占位提示文字，如果需要清楚功能，则必须设置placeholder。</p><h2 id="3、加载本地数据"><a href="#3、加载本地数据" class="headerlink" title="3、加载本地数据"></a>3、加载本地数据</h2><p>select2默认的数据属性是id、text，新版本可以自定义，但还是用默认的比较好。所以提供的json中最好转换为id、text形式，当然可以添加其他属性。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">var data = [&#123; id: 0, text: &apos;enhancement&apos; &#125;</span><br><span class="line">, &#123; id: 1, text: &apos;bug&apos; &#125;</span><br><span class="line">, &#123; id: 2, text: &apos;duplicate&apos; &#125;</span><br><span class="line">, &#123; id: 3, text: &apos;invalid&apos; &#125;</span><br><span class="line">, &#123; id: 4, text: &apos;wontfix&apos; &#125;];</span><br><span class="line"></span><br><span class="line">$(&quot;#c01-select&quot;).select2(&#123;</span><br><span class="line">  data: data,</span><br><span class="line">  placeholder:&apos;请选择&apos;,</span><br><span class="line">  allowClear:true</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><h2 id="4、加载远程数据"><a href="#4、加载远程数据" class="headerlink" title="4、加载远程数据"></a>4、加载远程数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#c01-select&quot;).select2(&#123;</span><br><span class="line">  ajax: &#123;</span><br><span class="line">    url: &quot;data.json&quot;,</span><br><span class="line">    dataType: &apos;json&apos;,</span><br><span class="line">    delay: 250,</span><br><span class="line">    data: function (params) &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        q: params.term,</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    processResults: function (data) &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        results: data</span><br><span class="line">      &#125;;</span><br><span class="line">    &#125;,</span><br><span class="line">    cache: true</span><br><span class="line">  &#125;,</span><br><span class="line">  escapeMarkup: function (markup) &#123; return markup; &#125;, </span><br><span class="line">  minimumInputLength: 1,</span><br><span class="line">  templateResult: formatRepo, </span><br><span class="line">  templateSelection: formatRepoSelection </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>说明：<br>q: params.term 查询参数（params.term表示输入框中内容，q发生到服务器的参数名；所以这里你可以添加自定义参数，如：stype:’person’）</p><p>processResults中results: data返回数据（返回最终数据给results，如果我的数据在data.res下，则返回data.res。这个与服务器返回json有关）</p><p>minimumInputLength 最小需要输入多少个字符才进行查询，与之相关的maximumSelectionLength表示最大输入限制。</p><p>escapeMarkup字符转义处理</p><p>templateResult返回结果回调function formatRepo(repo){return repo.text},这样就可以将返回结果的的text显示到下拉框里，当然你可以return repo.text+”1”;等</p><p>templateSelection选中项回调function formatRepoSelection(repo){return repo.text}</p><p>关于返回的 json的格式：select2默认json格式为[{id:1,text:’text’},{id:2,text:’text’}]，新版严格要求这样的格式，当然你可以添加列，如：[{id:1,text:’text’,name:’liu’}]</p><h2 id="5、获取选中项"><a href="#5、获取选中项" class="headerlink" title="5、获取选中项"></a>5、获取选中项</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var res=$(&quot;#c01-select&quot;).select2(&quot;data&quot;)[0] ; //单选</span><br><span class="line">var reslist=$(&quot;#c01-select&quot;).select2(&quot;data&quot;);    //多选</span><br><span class="line">if(res==undefined)</span><br><span class="line">&#123;</span><br><span class="line">     alert(&quot;你没有选中任何项&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(reslist.length)</span><br><span class="line">&#123;</span><br><span class="line">     alert(&quot;你选中任何项&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、清空选择项和设置不可用"><a href="#6、清空选择项和设置不可用" class="headerlink" title="6、清空选择项和设置不可用"></a>6、清空选择项和设置不可用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//清空选择</span><br><span class="line">$(&quot;#c01-select&quot;).val(null).trigger(&quot;change&quot;);</span><br><span class="line">$(&quot;#c01-select&quot;).val(&quot;你的placeholder&quot;).trigger(&quot;change&quot;);//或者</span><br><span class="line">//disabled</span><br><span class="line">$(&quot;#c01-select&quot;).prop(&quot;disabled&quot;, false);//可用</span><br><span class="line">$(&quot;#c01-select&quot;).prop(&quot;disabled&quot;, true);//不可用</span><br></pre></td></tr></table></figure><h2 id="7、启用多选"><a href="#7、启用多选" class="headerlink" title="7、启用多选"></a>7、启用多选</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;#c01-select&quot;).select2(&#123;</span><br><span class="line">  data:data,</span><br><span class="line">  multiple: true</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="8、下面简单说明新版与老版对比"><a href="#8、下面简单说明新版与老版对比" class="headerlink" title="8、下面简单说明新版与老版对比"></a>8、下面简单说明新版与老版对比</h2><p>(1)结果回调和选中回调名称：formatResult、formatSelection（老版）；templateResult、templateSelection（新版）</p><p>(2)初始化：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">//老版，注意如果初始化时文本框中本身没有值（为空），则不会触发该方法</span><br><span class="line">initSelection: function (element, callback) &#123;</span><br><span class="line">   var id = $(element).val();</span><br><span class="line">   var data = &#123; id: id, text: id&#125;;//这里是初始化的数据，你可以通过id来从服务器上获取（ajax），再装载进去</span><br><span class="line">   callback(data);</span><br><span class="line">&#125;</span><br><span class="line">//新版，直接给select添加option</span><br><span class="line">$(&quot;#id&quot;).append(new Option(&quot;Jquery&quot;, 10001, false, true));</span><br><span class="line">//或者</span><br><span class="line">$(&quot;#id&quot;).append(&quot;&lt;option value=&apos;10001&apos;&gt;Jquery&lt;/option&gt;&quot;);</span><br></pre></td></tr></table></figure></p><p>(3)获取或设置值：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select2(&quot;val&quot;)（老版）；</span><br><span class="line">$(&quot;select&quot;).val()（新版）</span><br></pre></td></tr></table></figure></p><p>(4)推荐使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var res = $(&quot;#id&quot;).select2(&quot;data&quot;);</span><br><span class="line"></span><br><span class="line">//返回数组，单选就取res[0]；好处是不进可以获取id、text还可以获取其他属性，如res[0].names</span><br></pre></td></tr></table></figure></p><p>(5)停用或启用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(&quot;select&quot;).enable(false);（老版）；</span><br><span class="line">$(&quot;select&quot;).prop(&quot;disabled&quot;, true);（新版）</span><br></pre></td></tr></table></figure></p><p>(6)主题样式：<br>新版的样式已经更新，但如果想使用老版样式则可以设置 theme: “classic”</p><h1 id="项目使用中遇到的问题"><a href="#项目使用中遇到的问题" class="headerlink" title="项目使用中遇到的问题"></a>项目使用中遇到的问题</h1><h2 id="My-Demo实例代码"><a href="#My-Demo实例代码" class="headerlink" title="My Demo实例代码"></a>My Demo实例代码</h2><p>(1)取值<br>字符串的拼接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">form.on(&apos;submit(save)&apos;, function (data) &#123;</span><br><span class="line">var htmlSelected = [];</span><br><span class="line">   var reslist = $(&quot;#typeId&quot;).select2(&quot;data&quot;);</span><br><span class="line">   for (var i = 0; i &lt; reslist.length; i++) &#123;</span><br><span class="line">        htmlSelected.push($(&apos;#typeId&apos;).select2(&apos;data&apos;)[i].text);</span><br><span class="line">       &#125;</span><br><span class="line">    //标签信息。</span><br><span class="line">    data.field.Text_Tag = htmlSelected.join(&quot;,&quot;).toString();</span><br><span class="line">   $.formSubmit(&#123;</span><br><span class="line">       url: &quot;/System/ArticleManage/RequestSave&quot;,</span><br><span class="line">       data: data.field</span><br><span class="line">   &#125;);</span><br><span class="line">   return false;</span><br><span class="line"></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p><p>说明：放弃以前字符串”+”的拼接方式，改用声明数组，join(“,”)的拼接方式，这样省去字符末尾去空格的问题。<br>性能方面也会比前者好很多。<br>(2)赋值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//获取文章标签集合</span><br><span class="line">$(&quot;#typeId&quot;).bindSelect(&#123;</span><br><span class="line">    url: &quot;/System/ArticleManage/GetListTreeSelect&quot;,</span><br><span class="line">    title: &apos;请选择文章标签&apos;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="Other-Demo实例代码"><a href="#Other-Demo实例代码" class="headerlink" title="Other Demo实例代码"></a>Other Demo实例代码</h2><p>(1)取值<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=&quot;text/javascript&quot;&gt; </span><br><span class="line">//取text</span><br><span class="line">var strtext = $(&apos;#select2&apos;).select2(&apos;data&apos;).text;</span><br><span class="line">//取value</span><br><span class="line">var str2value= $(&quot;#select2&quot;).select2(&quot;val&quot;);</span><br><span class="line">//多选</span><br><span class="line">$(&apos;#select2&apos;).select2(&#123;</span><br><span class="line">    allowClear: true,</span><br><span class="line">    data:[&#123;id:0,text:&apos;hello&apos;&#125;,&#123;id:1,text:&apos;world&apos;&#125;]</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;select id=&quot;select2&quot; &gt; &lt;/select&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Select2升级以后，支持多选了，用select2(&apos;data&apos;)取出来是是数组，不在是一个json了，</span><br><span class="line">因需要select2(&apos;data&apos;)[0].text 既可以取得对应的值，多个的话循环获取</span><br></pre></td></tr></table></figure></p><p>(2)赋值<br>页面采用razor<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;form-group&quot;&gt;</span><br><span class="line">  &lt;label class=&quot;control-label&quot;&gt;销售人员：&lt;/label&gt;</span><br><span class="line">  @Html.DropDownListFor(m =&gt; m.SalesMan, ViewData[&quot;CreateStaffID&quot;] as SelectList, &quot;请选择&quot;, </span><br><span class="line">  new &#123; @id = &quot;SalesMan&quot;, @class = &quot;select2 &quot;, @style = &quot;width:67%;&quot; &#125;)</span><br><span class="line">  &lt;span class=&quot;help-line&quot;&gt;@Html.ValidationMessageFor(m =&gt; m.SalesMan)&lt;/span&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">js:</span><br><span class="line"></span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt; </span><br><span class="line">　//示例：给select2标签赋值23</span><br><span class="line">  @Html.Raw(&quot;$(&apos;#SalesMan&apos;).val(&quot;23&quot;)</span><br><span class="line">    $(&quot;#SalesMan&quot;).select2();</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><div class="note success"><p>参考原文：<a href="http://www.cnblogs.com/liuxiaobo93/p/5112993.html" target="_blank" rel="noopener">http://www.cnblogs.com/liuxiaobo93/p/5112993.html</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;一、概述&quot;&gt;&lt;a href=&quot;#一、概述&quot; class=&quot;headerlink&quot; title=&quot;一、概述&quot;&gt;&lt;/a&gt;一、概述&lt;/h1&gt;&lt;p&gt;组件说明以及API说明：&lt;br&gt;&lt;div class=&quot;note success&quot;&gt;&lt;p&gt;Select2使用示例地址：&lt;a 
      
    
    </summary>
    
      <category term="前端" scheme="http://haimianbao1111.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://haimianbao1111.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>.NET，C#和ASP.NET的关系</title>
    <link href="http://haimianbao1111.github.io/2018/02/08/C-%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>http://haimianbao1111.github.io/2018/02/08/C-小技巧/</id>
    <published>2018-02-08T10:17:49.000Z</published>
    <updated>2018-02-08T12:55:20.950Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><h2 id="NET是一个平台，一个抽象的平台的概念。"><a href="#NET是一个平台，一个抽象的平台的概念。" class="headerlink" title=".NET是一个平台，一个抽象的平台的概念。"></a>.NET是一个平台，一个抽象的平台的概念。</h2><p>.NET平台其本身实现的方式其实还是库，抽象层面上来看是一个平台。<br>个人理解.NET核心就只是.NET Framework。<br>.NET Framework包括了两个关键组成元素：<br>Common Language Runtime，　公共语言运行时  －－提供内存管理、代码安全性检测等等功能。<br>.NET Framework Class Library， .NET框架类库   －－提供大量应用类库、提高开发效率。</p><h2 id="C-是一个程序设计语言，仅仅是一个语言。"><a href="#C-是一个程序设计语言，仅仅是一个语言。" class="headerlink" title="C#是一个程序设计语言，仅仅是一个语言。"></a>C#是一个程序设计语言，仅仅是一个语言。</h2><p>运行在.NET(CLR)上的，用于创建应用程序的一种高级编程语言。<br>程序设计语言仅仅是为了方便开发人员和计算机沟通的工具，虽然C#语法相对C和C++要多一些，但是相对来看C#语法都比较固定，这样使用起来却都很容易。</p><h2 id="ASP-NET是一个网站开发的技术，仅仅是-NET框架中的一个应用模型。"><a href="#ASP-NET是一个网站开发的技术，仅仅是-NET框架中的一个应用模型。" class="headerlink" title="ASP.NET是一个网站开发的技术，仅仅是.NET框架中的一个应用模型。"></a>ASP.NET是一个网站开发的技术，仅仅是.NET框架中的一个应用模型。</h2><p>用微软公司ASP.NET快速入门中的一句话来解释，ASP.NET 是用于生成基于 Web 的应用程序的内容丰富的编程框架。</p><h1 id="ASP-net和C-的区别："><a href="#ASP-net和C-的区别：" class="headerlink" title="ASP.net和C#的区别："></a>ASP.net和C#的区别：</h1><p>编写asp.net通常包括两部分的代码:网页层和后台处理层.网页就是用标记语言来写的，而网页对应的后台处理程序则需要.net语言来完成，目前主要是采用c#和vb.net<br>可以说整个的asp.net网站通过c#或者vb.net来实现。而c#则是ms .net framework的主要语言，可以用在网站，桌面应用等方面。可以算是一种比较流行的编程语言。</p><h1 id="C-能编写什么样的应用程序"><a href="#C-能编写什么样的应用程序" class="headerlink" title="C#能编写什么样的应用程序?"></a>C#能编写什么样的应用程序?</h1><h2 id="桌而应用释详："><a href="#桌而应用释详：" class="headerlink" title="桌而应用释详："></a>桌而应用释详：</h2><p>使用.Net Framework的Windows Presentation Foundation(WPF)模块就可以简便地生成这种程序。</p><h2 id="WindowsStore应用程序"><a href="#WindowsStore应用程序" class="headerlink" title="WindowsStore应用程序:"></a>WindowsStore应用程序:</h2><p>WIN8新引入的一类应用程序，针对触摸屏设计，通常全屏运行。</p><h2 id="Web应用程序"><a href="#Web应用程序" class="headerlink" title="Web应用程序:"></a>Web应用程序:</h2><p>它们是一些Web页面，可以通过任何Web浏览器查看。可以用C#语言通过Web Forms创建ASP.NET应用程序。</p><h2 id="WCF服务"><a href="#WCF服务" class="headerlink" title="WCF服务:"></a>WCF服务:</h2><p>这是一种灵活创建各种分布式应用程巧的方式。使用 WCF服务可以通过局域网或Internet交换几乎各种数据。</p><h1 id="NET的两种交互模式主要有："><a href="#NET的两种交互模式主要有：" class="headerlink" title=".NET的两种交互模式主要有："></a>.NET的两种交互模式主要有：</h1><h2 id="B-S"><a href="#B-S" class="headerlink" title="B/S"></a>B/S</h2><h2 id="C-S"><a href="#C-S" class="headerlink" title="C/S"></a>C/S</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;h2 id=&quot;NET是一个平台，一个抽象的平台的概念。&quot;&gt;&lt;a href=&quot;#NET是一个平台，一个抽象的平台的概念。&quot; class=&quot;head
      
    
    </summary>
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/categories/Asp-Net/"/>
    
    
      <category term="Asp.Net" scheme="http://haimianbao1111.github.io/tags/Asp-Net/"/>
    
  </entry>
  
  <entry>
    <title>将枚举值转换为DropDownList等的选项值</title>
    <link href="http://haimianbao1111.github.io/2018/02/06/%E5%B0%86%E6%9E%9A%E4%B8%BE%E5%80%BC%E8%BD%AC%E6%8D%A2%E4%B8%BADropDownList%E7%AD%89%E7%9A%84%E9%80%89%E9%A1%B9%E5%80%BC/"/>
    <id>http://haimianbao1111.github.io/2018/02/06/将枚举值转换为DropDownList等的选项值/</id>
    <published>2018-02-06T04:27:59.000Z</published>
    <updated>2018-02-06T04:50:09.421Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>应用场景：在项目中，我们已习惯将较稳定的分类标准定义为枚举，来保证程序中取值的合法性，也使代码更清晰。某些情况下我们需要在DropDownList等选择控件上绑定某个枚举的所有枚举值，供用户自行选择，这时就需要将枚举值转换为DropDownList等的选项值。</p><h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><h2 id="枚举定义"><a href="#枚举定义" class="headerlink" title="枚举定义"></a>枚举定义</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 紧急程度</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public enum eOA_EmergencyLevel</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 平件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    平件 = 1,</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 急件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    急件 = 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="将枚举转换成ArrayList"><a href="#将枚举转换成ArrayList" class="headerlink" title="将枚举转换成ArrayList"></a>将枚举转换成ArrayList</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 将枚举转换成ArrayList</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">/// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">public static IList EnumToList(Type enumType)</span><br><span class="line">&#123;</span><br><span class="line">    ArrayList list = new ArrayList();</span><br><span class="line"></span><br><span class="line">    foreach (int i in Enum.GetValues(enumType))</span><br><span class="line">    &#123;</span><br><span class="line">        ListItem listitem = new ListItem(Enum.GetName(enumType, i), i.ToString());</span><br><span class="line">        list.Add(listitem);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    return list;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="绑定"><a href="#绑定" class="headerlink" title="绑定"></a>绑定</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 将枚举转换成下拉框</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public static void FillDropDownList(DropDownList ddl, Type enumType)</span><br><span class="line">&#123;</span><br><span class="line">    ddl.Items.Clear();</span><br><span class="line">    ddl.DataSource = EnumToList(enumType);</span><br><span class="line">    ddl.DataValueField = &quot;value&quot;;</span><br><span class="line">    ddl.DataTextField = &quot;text&quot;;</span><br><span class="line">    ddl.DataBind();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>后来，在同事讨论代码时，被大家批评为不该使用这种中文的枚举名称；同时我自己也觉得这种反射方式性能有问题。不过因为影响不大，一直懒得去理它。</p><p>最近看到了两篇博文（<a href="http://www.cnblogs.com/zhucai/archive/2009/05/27/enum_bind.html" target="_blank" rel="noopener">枚举的显示和绑定</a>&gt;和<a href="http://www.cnblogs.com/JeffreyZhao/archive/2009/01/07/AttachDataExtensions.html" target="_blank" rel="noopener">一个利用扩展方法的实例：AttachDataExtensions </a>），是利用C# 3.0的扩展方法实现的，实现得很是优美，可惜我们的项目基于.NET 2.0，用不上。但受此启发，便花了点时间使用Attribute和缓存的技术重构了原来的代码。</p><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><h2 id="EnumShowNameAttribute"><a href="#EnumShowNameAttribute" class="headerlink" title="EnumShowNameAttribute"></a>EnumShowNameAttribute</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 枚举的显示名称</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">[global::System.AttributeUsage(AttributeTargets.Field, Inherited = false, AllowMultiple = false)]</span><br><span class="line">public sealed class EnumShowNameAttribute : Attribute</span><br><span class="line">&#123;</span><br><span class="line">    private string showName;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 显示名称</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    public string ShowName</span><br><span class="line">    &#123;</span><br><span class="line">        get</span><br><span class="line">        &#123;</span><br><span class="line">            return this.showName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 构造枚举的显示名称</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;showName&quot;&gt;显示名称&lt;/param&gt;</span><br><span class="line">    public EnumShowNameAttribute(string showName)</span><br><span class="line">    &#123;</span><br><span class="line">        this.showName = showName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">枚举定义</span><br><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 紧急程度</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public enum eOA_EmergencyLevel</span><br><span class="line">&#123;</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 平件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    [EnumShowName(&quot;平件&quot;)]</span><br><span class="line">    Common = 1,</span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 急件</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    [EnumShowName(&quot;急件&quot;)]</span><br><span class="line">    Emergency = 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="枚举工具类"><a href="#枚举工具类" class="headerlink" title="枚举工具类"></a>枚举工具类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">/// &lt;summary&gt;</span><br><span class="line">/// 枚举工具类</span><br><span class="line">/// &lt;/summary&gt;</span><br><span class="line">public sealed class EnumUtil</span><br><span class="line">&#123;</span><br><span class="line">    private static Dictionary&lt;string, Dictionary&lt;int, string&gt;&gt; _EnumList = new Dictionary&lt;string, Dictionary&lt;int, string&gt;&gt;(); //枚举缓存池</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 将枚举绑定到ListControl</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;listControl&quot;&gt;ListControl&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;enumType&quot;&gt;枚举类型&lt;/param&gt;</span><br><span class="line">    public static void FillListControl(ListControl listControl, Type enumType)</span><br><span class="line">    &#123;</span><br><span class="line">        listControl.Items.Clear();</span><br><span class="line">        listControl.DataSource = EnumToDictionary(enumType);</span><br><span class="line">        listControl.DataValueField = &quot;key&quot;;</span><br><span class="line">        listControl.DataTextField = &quot;value&quot;;</span><br><span class="line">        listControl.DataBind();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 将枚举转换成Dictionary&amp;lt;int, string&amp;gt;</span><br><span class="line">    /// Dictionary中，key为枚举项对应的int值；value为：若定义了EnumShowName属性，则取它，否则取name</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;enumType&quot;&gt;枚举类型&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public static Dictionary&lt;int, string&gt; EnumToDictionary(Type enumType)</span><br><span class="line">    &#123;</span><br><span class="line">        string keyName = enumType.FullName;</span><br><span class="line"></span><br><span class="line">        if (!_EnumList.ContainsKey(keyName))</span><br><span class="line">        &#123;</span><br><span class="line">            Dictionary&lt;int, string&gt; list = new Dictionary&lt;int, string&gt;();</span><br><span class="line"></span><br><span class="line">            foreach (int i in Enum.GetValues(enumType))</span><br><span class="line">            &#123;</span><br><span class="line">                string name = Enum.GetName(enumType, i);</span><br><span class="line"></span><br><span class="line">                //取显示名称</span><br><span class="line">                  string showName = string.Empty;</span><br><span class="line">                object[] atts = enumType.GetField(name).GetCustomAttributes(typeof(EnumShowNameAttribute), false);</span><br><span class="line">                if (atts.Length &gt; 0) showName = ((EnumShowNameAttribute)atts[0]).ShowName;</span><br><span class="line"></span><br><span class="line">                list.Add(i, string.IsNullOrEmpty(showName) ? name : showName);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            object syncObj = new object();</span><br><span class="line"></span><br><span class="line">            if (!_EnumList.ContainsKey(keyName))</span><br><span class="line">            &#123;</span><br><span class="line">                lock (syncObj)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (!_EnumList.ContainsKey(keyName))</span><br><span class="line">                    &#123;</span><br><span class="line">                        _EnumList.Add(keyName, list);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return _EnumList[keyName];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /// &lt;summary&gt;</span><br><span class="line">    /// 获取枚举值对应的显示名称</span><br><span class="line">    /// &lt;/summary&gt;</span><br><span class="line">    /// &lt;param name=&quot;enumType&quot;&gt;枚举类型&lt;/param&gt;</span><br><span class="line">    /// &lt;param name=&quot;intValue&quot;&gt;枚举项对应的int值&lt;/param&gt;</span><br><span class="line">    /// &lt;returns&gt;&lt;/returns&gt;</span><br><span class="line">    public static string GetEnumShowName(Type enumType, int intValue)</span><br><span class="line">    &#123;</span><br><span class="line">        return EnumToDictionary(enumType)[intValue];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想更偷懒的话，还可以省掉自定义的EnumShowNameAttribute，直接用System.ComponentModel.DescriptionAttribute就行了。</p><div class="note success"><p>[附]Enum基础知识：<br><a href="http://www.cnblogs.com/flashicp/archive/2007/03/22/684259.html" target="_blank" rel="noopener">c# 枚举 enum</a><br><a href="https://kb.cnblogs.com/page/42561/" target="_blank" rel="noopener">.NET中Flags枚举的使用 </a><br><a href="http://www.cnblogs.com/allenlooplee/archive/2004/12/19/70230.html" target="_blank" rel="noopener">关于枚举的种种 (Enumeration FAQ) [C#, IL, BCL]</a>  </p></div><div class="note success"><p>原文链接：<a href="http://www.cnblogs.com/wenjian/archive/2009/06/19/1506550.html" target="_blank" rel="noopener">http://www.cnblogs.com/wenjian/archive/2009/06/19/1506550.html</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;应用场景：在项目中，我们已习惯将较稳定的分类标准定义为枚举，来保证程序中取值的合法性，也使代码更清晰。某些情况下我们需要在DropDownL
      
    
    </summary>
    
      <category term="工具" scheme="http://haimianbao1111.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="C#小技巧" scheme="http://haimianbao1111.github.io/tags/C-%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>将字符串转换成List&lt;T&gt;</title>
    <link href="http://haimianbao1111.github.io/2018/02/06/%E5%B0%86%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2%E6%88%90List-T/"/>
    <id>http://haimianbao1111.github.io/2018/02/06/将字符串转换成List-T/</id>
    <published>2018-02-06T04:19:37.000Z</published>
    <updated>2018-02-06T04:47:49.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>有时需要将一个字符串分隔后，转换成指定类型的数组或List<t>，比如服务器端收到提交的一组checkbox的值，可能是一个ID串，类似：56,657,0,1,2,3,4,5,6,7,8，需要将它转成一个int数组或List<t>再进行后续处理。</t></t></p><h1 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h1><h2 id="可用Array-ConvertAll-lt-gt-泛型方法来实现"><a href="#可用Array-ConvertAll-lt-gt-泛型方法来实现" class="headerlink" title="可用Array.ConvertAll&lt;/&gt; 泛型方法来实现"></a>可用<a href="https://msdn.microsoft.com/zh-cn/library/exc45z53(VS.80).aspx" target="_blank" rel="noopener">Array.ConvertAll&lt;/&gt; 泛型方法来实现</a></h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">string str = &quot;56,657,0,1,2,3,4,5,6,7,8&quot;;</span><br><span class="line">int[] arrInt = Array.ConvertAll&lt;string, int&gt;(str.Split(&apos;,&apos;), s =&gt; int.Parse(s));</span><br><span class="line">foreach (int i in arrInt) Console.WriteLine(i);</span><br></pre></td></tr></table></figure><h2 id="将这功能做成string的扩展方法"><a href="#将这功能做成string的扩展方法" class="headerlink" title="将这功能做成string的扩展方法"></a>将这功能做成string的扩展方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public static List&lt;T&gt; ToList&lt;T&gt;(this string str, char split, Converter&lt;string, T&gt; convertHandler)</span><br><span class="line">&#123;</span><br><span class="line">    if (string.IsNullOrEmpty(str))</span><br><span class="line">    &#123;</span><br><span class="line">        return new List&lt;T&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">        string[] arr = str.Split(split);</span><br><span class="line">        T[] Tarr = Array.ConvertAll(arr, convertHandler);</span><br><span class="line">        return new List&lt;T&gt;(Tarr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;int&gt; intList = str.ToList&lt;int&gt;(&apos;,&apos;, s =&gt; int.Parse(s));</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;有时需要将一个字符串分隔后，转换成指定类型的数组或List&lt;t&gt;，比如服务器端收到提交的一组checkbox的值，可能是一个ID串，类似：5
      
    
    </summary>
    
      <category term="工具" scheme="http://haimianbao1111.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="C#小技巧" scheme="http://haimianbao1111.github.io/tags/C-%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>Powerdesigner与数据库同步</title>
    <link href="http://haimianbao1111.github.io/2018/01/30/Powerdesigner%E4%B8%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E5%90%8C%E6%AD%A5/"/>
    <id>http://haimianbao1111.github.io/2018/01/30/Powerdesigner与数据库同步/</id>
    <published>2018-01-30T10:30:10.000Z</published>
    <updated>2018-01-30T11:10:13.873Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>在使用PowerDesigner进行数据库设计、生成数据库，并开发进行一段时间后， 在这段时间内，数据库的结构必然会有一些变化。我们往往会遇到这样的问题，PowerDesigner与现有数据库结构不匹配。如果人工的比较，即费时又会出错。</p><h1 id="PowerDesigner-生成数据库"><a href="#PowerDesigner-生成数据库" class="headerlink" title="PowerDesigner 生成数据库"></a>PowerDesigner 生成数据库</h1><p>由于人工比较的缺陷，我们需要一个工具来解决。首先，因为PowerDesigner文件与数据库文件是完全不同的两种文件格式，所以我们先要将它们转换成同样的数据结构。我们用PowerDesigner的物理模型生成一个新的数据库。以生成SQL SERVER 为例：</p><h2 id="“Database”-gt-”Generate-Database”"><a href="#“Database”-gt-”Generate-Database”" class="headerlink" title="“Database”-&gt;”Generate Database”"></a>“Database”-&gt;”Generate Database”</h2><p><img src="/images/PowerDesigner/PowerDesigner1.png" class="full-image"></p><p>此时数据库设计为Employee表（原始数据库结构）：<br><img src="/images/PowerDesigner/PowerDesigner2.png" class="full-image"></p><h2 id="然后，在输出目录你会看到SQL脚本文件，新建一个数据库，并执行脚本"><a href="#然后，在输出目录你会看到SQL脚本文件，新建一个数据库，并执行脚本" class="headerlink" title="然后，在输出目录你会看到SQL脚本文件，新建一个数据库，并执行脚本"></a>然后，在输出目录你会看到SQL脚本文件，新建一个数据库，并执行脚本</h2><h2 id="现在我们改变一些设计，表结构如下（新数据库结构）："><a href="#现在我们改变一些设计，表结构如下（新数据库结构）：" class="headerlink" title="现在我们改变一些设计，表结构如下（新数据库结构）："></a>现在我们改变一些设计，表结构如下（新数据库结构）：</h2><p><img src="/images/PowerDesigner/PowerDesigner3.png" class="full-image"></p><p>将EmpName的数据类型改为nvarchar(100)， 添加DeptID列。</p><h1 id="数据库架构比较工具"><a href="#数据库架构比较工具" class="headerlink" title="数据库架构比较工具"></a>数据库架构比较工具</h1><p>数据库数据对比工具 SQLDiff（MSSQL版）是针对MS SQLServer的一款小工具，可以针对两个数据进行表结构和数据的对比。</p><h2 id="1、结构对比：如开发库和正式库之间的结构和数据同步，此工具可以告诉您哪个表结构有字段的增加减少，或者字段类型的改变，并生成sql进行结构的同步。"><a href="#1、结构对比：如开发库和正式库之间的结构和数据同步，此工具可以告诉您哪个表结构有字段的增加减少，或者字段类型的改变，并生成sql进行结构的同步。" class="headerlink" title="1、结构对比：如开发库和正式库之间的结构和数据同步，此工具可以告诉您哪个表结构有字段的增加减少，或者字段类型的改变，并生成sql进行结构的同步。"></a>1、结构对比：如开发库和正式库之间的结构和数据同步，此工具可以告诉您哪个表结构有字段的增加减少，或者字段类型的改变，并生成sql进行结构的同步。</h2><h2 id="2、数据对比：如对比两个数据库中的某个表的数据差异，有差异的行会用颜色进行标记，可生成sql脚本进行两个库的同步。"><a href="#2、数据对比：如对比两个数据库中的某个表的数据差异，有差异的行会用颜色进行标记，可生成sql脚本进行两个库的同步。" class="headerlink" title="2、数据对比：如对比两个数据库中的某个表的数据差异，有差异的行会用颜色进行标记，可生成sql脚本进行两个库的同步。"></a>2、数据对比：如对比两个数据库中的某个表的数据差异，有差异的行会用颜色进行标记，可生成sql脚本进行两个库的同步。</h2><div class="note success"><p>下载链接：<a href="http://download.csdn.net/download/swordmanli/9629605" target="_blank" rel="noopener">http://download.csdn.net/download/swordmanli/9629605</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h1&gt;&lt;p&gt;在使用PowerDesigner进行数据库设计、生成数据库，并开发进行一段时间后， 在这段时间内，数据库的结构必然会有一些变化。我们往往会遇
      
    
    </summary>
    
      <category term="工具" scheme="http://haimianbao1111.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="Powerdesigner,工具" scheme="http://haimianbao1111.github.io/tags/Powerdesigner-%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>PageOffice_4.2.0.1_ASP.NET MVC开发笔记</title>
    <link href="http://haimianbao1111.github.io/2018/01/30/PageOffice-4-2-0-1-ASP-NET-MVC%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>http://haimianbao1111.github.io/2018/01/30/PageOffice-4-2-0-1-ASP-NET-MVC开发笔记/</id>
    <published>2018-01-30T03:25:44.000Z</published>
    <updated>2018-01-30T03:41:31.216Z</updated>
    
    <content type="html"><![CDATA[<h1 id="PageOffice开发笔记"><a href="#PageOffice开发笔记" class="headerlink" title="PageOffice开发笔记"></a>PageOffice开发笔记</h1><h2 id="开发环境：vs2015，mvc，razor"><a href="#开发环境：vs2015，mvc，razor" class="headerlink" title="开发环境：vs2015，mvc，razor"></a>开发环境：vs2015，mvc，razor</h2><h1 id="使用操作"><a href="#使用操作" class="headerlink" title="使用操作"></a>使用操作</h1><h2 id="1-双击运行Setup-exe安装服务器组件。"><a href="#1-双击运行Setup-exe安装服务器组件。" class="headerlink" title="1. 双击运行Setup.exe安装服务器组件。"></a>1. 双击运行Setup.exe安装服务器组件。</h2><h2 id="2-第一次运行包含PageOfficeLink组件的网页时，会弹出注册对话框，请输入注册信息注册。"><a href="#2-第一次运行包含PageOfficeLink组件的网页时，会弹出注册对话框，请输入注册信息注册。" class="headerlink" title="2. 第一次运行包含PageOfficeLink组件的网页时，会弹出注册对话框，请输入注册信息注册。"></a>2. 第一次运行包含PageOfficeLink组件的网页时，会弹出注册对话框，请输入注册信息注册。</h2><h2 id="3-如果新建网站或集成PageOffice到您现有的网站里"><a href="#3-如果新建网站或集成PageOffice到您现有的网站里" class="headerlink" title="3. 如果新建网站或集成PageOffice到您现有的网站里:"></a>3. 如果新建网站或集成PageOffice到您现有的网站里:</h2><p>拷贝“集成文件”目录下的“pageoffice”文件夹到您自己网站的根目录下；</p><h1 id="页面操作"><a href="#页面操作" class="headerlink" title="页面操作"></a>页面操作</h1><h2 id="前台："><a href="#前台：" class="headerlink" title="前台："></a>前台：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@&#123;</span><br><span class="line">    ViewBag.Title = &quot;Word&quot;;</span><br><span class="line">&#125;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">          function Save() &#123;</span><br><span class="line">              document.getElementById(&quot;PageOfficeCtrl1&quot;).WebSave();</span><br><span class="line">        &#125;</span><br><span class="line">         </span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;div style=&quot;width:900px; height:600px;&quot;&gt;</span><br><span class="line"></span><br><span class="line">    @Html.Raw(ViewBag.EditorHtml)</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="控制器"><a href="#控制器" class="headerlink" title="控制器"></a>控制器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">namespace PageOffice4_MVC_Razor.Controllers</span><br><span class="line">&#123;</span><br><span class="line">public class WordController : Controller</span><br><span class="line">    &#123;</span><br><span class="line">public void SaveDoc()</span><br><span class="line">        &#123;</span><br><span class="line">            ViewBag.Message = &quot;Your app description page.&quot;;</span><br><span class="line">            string filePath = Server.MapPath(&quot;/test.doc&quot;);</span><br><span class="line">            PageOffice.FileSaver fs = new PageOffice.FileSaver();</span><br><span class="line">            fs.SaveToFile(filePath);</span><br><span class="line">            fs.Close();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public ActionResult Word()</span><br><span class="line">        &#123;</span><br><span class="line">            ViewBag.Message = &quot;Your contact page.&quot;;</span><br><span class="line"></span><br><span class="line">            PageOffice.PageOfficeCtrl pc = new PageOffice.PageOfficeCtrl();</span><br><span class="line">            pc.AddCustomToolButton(&quot;保存&quot;, &quot;Save()&quot;, 1);</span><br><span class="line">            pc.SaveFilePage = &quot;/Word/SaveDoc&quot;;</span><br><span class="line">            pc.ServerPage = &quot;/pageoffice/server.aspx&quot;;</span><br><span class="line">       </span><br><span class="line">            pc.WebOpen(&quot;/test.doc&quot;, PageOffice.OpenModeType.docAdmin, &quot;s&quot;);</span><br><span class="line"></span><br><span class="line">            ViewBag.EditorHtml = pc.GetHtmlCode(&quot;PageOfficeCtrl1&quot;);</span><br><span class="line"></span><br><span class="line">            return View();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="帮助文档"><a href="#帮助文档" class="headerlink" title="帮助文档"></a>帮助文档</h1><div class="note success"><p>链接：<a href="http://www.zhuozhengsoft.com/Technical/" target="_blank" rel="noopener">http://www.zhuozhengsoft.com/Technical/</a></p></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;PageOffice开发笔记&quot;&gt;&lt;a href=&quot;#PageOffice开发笔记&quot; class=&quot;headerlink&quot; title=&quot;PageOffice开发笔记&quot;&gt;&lt;/a&gt;PageOffice开发笔记&lt;/h1&gt;&lt;h2 id=&quot;开发环境：vs2015，mvc，r
      
    
    </summary>
    
      <category term="MVC" scheme="http://haimianbao1111.github.io/categories/MVC/"/>
    
    
      <category term="MVC,PageOffice" scheme="http://haimianbao1111.github.io/tags/MVC-PageOffice/"/>
    
  </entry>
  
  <entry>
    <title>mvc4.5从客户端中检测到有潜在危险的 Request.Form 值</title>
    <link href="http://haimianbao1111.github.io/2018/01/29/mvc4-5%E4%BB%8E%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%AD%E6%A3%80%E6%B5%8B%E5%88%B0%E6%9C%89%E6%BD%9C%E5%9C%A8%E5%8D%B1%E9%99%A9%E7%9A%84-Request-Form-%E5%80%BC/"/>
    <id>http://haimianbao1111.github.io/2018/01/29/mvc4-5从客户端中检测到有潜在危险的-Request-Form-值/</id>
    <published>2018-01-29T13:39:20.000Z</published>
    <updated>2018-01-29T14:15:15.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="错误截图："><a href="#错误截图：" class="headerlink" title="错误截图："></a>错误截图：</h1><p>今天，在做一个mvc表单提交，其中内容框使用UEditor插件，支持带html文本内容，结果在提交的时候遇到如下提示：<br><img src="/images/Form/submitError.png" class="full-image"></p><h1 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h1><ol><li><p>webconfig修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;system.web&gt;</span><br><span class="line"> &lt;httpRuntime targetFramework=&quot;4.5&quot; requestValidationMode=&quot;2.0&quot;/&gt;</span><br><span class="line">&lt;/system.web&gt;</span><br></pre></td></tr></table></figure></li><li><p>请求控制器修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[ValidateInput(false)]</span><br><span class="line">[HttpPost]</span><br><span class="line">   public ActionResult Form(VideoMDL model)</span><br><span class="line">   &#123;</span><br><span class="line">       return Json(&quot;OK&quot;, JsonRequestBehavior.AllowGet);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></li></ol><p>[ValidateInput(false)] 不启用验证（默认为True）</p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>Server.HtmlEncode(content)转码，过滤一些字符。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;错误截图：&quot;&gt;&lt;a href=&quot;#错误截图：&quot; class=&quot;headerlink&quot; title=&quot;错误截图：&quot;&gt;&lt;/a&gt;错误截图：&lt;/h1&gt;&lt;p&gt;今天，在做一个mvc表单提交，其中内容框使用UEditor插件，支持带html文本内容，结果在提交的时候遇到如下提示
      
    
    </summary>
    
      <category term="MVC" scheme="http://haimianbao1111.github.io/categories/MVC/"/>
    
    
      <category term="MVC" scheme="http://haimianbao1111.github.io/tags/MVC/"/>
    
  </entry>
  
  <entry>
    <title>Sublime Text 常用的快捷键</title>
    <link href="http://haimianbao1111.github.io/2018/01/28/Sublime-Text-%E5%B8%B8%E7%94%A8%E7%9A%84%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
    <id>http://haimianbao1111.github.io/2018/01/28/Sublime-Text-常用的快捷键/</id>
    <published>2018-01-28T07:32:41.000Z</published>
    <updated>2018-01-28T08:39:10.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Sublime-Text-3-快捷键（实用，快速换行等）"><a href="#Sublime-Text-3-快捷键（实用，快速换行等）" class="headerlink" title="Sublime Text 3 快捷键（实用，快速换行等）"></a>Sublime Text 3 快捷键（实用，快速换行等）</h1><h2 id="1-选择类"><a href="#1-选择类" class="headerlink" title="1.选择类"></a>1.选择类</h2><p>Ctrl+D ：选中光标所占的文本，继续操作则会选中下一个相同的文本。<br>Alt+F3：选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑。举个栗子：快速选中并更改所有相同的变量名、函数名等。<br>Ctrl+L：选中整行，继续操作则继续选择下一行，效果和 Shift+↓ 效果一样。<br>Ctrl+Shift+L ：先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。<br>Ctrl+Shift+M：选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。<br>Ctrl+M：光标移动至括号内结束或开始的位置。<br>Ctrl+Enter：在下一行插入新行。举个例子：即使光标不在行尾，也能快速向下插入一行。<br>Ctrl+Shift+Enter： 在上一行插入新行。举个栗子：即使光标不在行首，也能快速向上插入一行。<br>Ctrl+Shift+[ ：选中代码，按下快捷键，折叠代码。<br>Ctrl+Shift+] ：选中代码，按下快捷键，展开代码。<br>Ctrl+K+0 ：展开所有折叠代码。<br>Ctrl+← ：向左单位性地移动光标，快速移动光标。<br>Ctrl+→ ：向右单位性地移动光标，快速移动光标。<br>shift+↑ ：向上选中多行。<br>shift+↓ ：向下选中多行。<br>Shift+← ：向左选中文本。<br>Shift+→： 向右选中文本。<br>Ctrl+Shift+←：向左单位性地选中文本。<br>Ctrl+Shift+→：向右单位性地选中文本。<br>Ctrl+Shift+↑：将光标所在行和上一行代码互换（将光标所在行插入到上一行之前）。<br>Ctrl+Shift+↓：将光标所在行和下一行代码互换（将光标所在行插入到下一行之后）。<br>Ctrl+Alt+↑：向上添加多行光标，可同时编辑多行。<br>Ctrl+Alt+↓：向下添加多行光标，可同时编辑多行。</p><h2 id="搜索类"><a href="#搜索类" class="headerlink" title="搜索类"></a>搜索类</h2><p>Ctrl+J：合并选中的多行代码为一行。举个栗子：将多行格式的CSS属性合并为一行。<br>Ctrl+Shift+D：复制光标所在整行，插入到下一行。<br>Tab：向右缩进。<br>Shift+Tab：向左缩进。<br>Ctrl+K+K：从光标处开始删除代码至行尾。<br>Ctrl+Shift+K：删除整行。<br>Ctrl+/：注释单行。<br>Ctrl+Shift+/ ：注释多行。<br>Ctrl+K+U：转换大写。<br>Ctrl+K+L：转换小写。<br>Ctrl+Z：撤销。<br>Ctrl+Y：恢复撤销。<br>Ctrl+U：软撤销，感觉和 Gtrl+Z 一样。<br>Ctrl+F2：设置书签<br>Ctrl+T：左右字母互换。<br>F6： 单词检测拼写</p><h2 id="显示类"><a href="#显示类" class="headerlink" title="显示类"></a>显示类</h2><p>Ctrl+Tab：按文件浏览过的顺序，切换当前窗口的标签页。<br>Ctrl+PageDown：向左切换当前窗口的标签页。<br>Ctrl+PageUp： 向右切换当前窗口的标签页。<br>Alt+Shift+1： 窗口分屏，恢复默认1屏（非小键盘的数字）<br>Alt+Shift+2： 左右分屏-2列<br>Alt+Shift+3： 左右分屏-3列<br>Alt+Shift+4： 左右分屏-4列<br>Alt+Shift+5： 等分4屏<br>Alt+Shift+8： 垂直分屏-2屏<br>Alt+Shift+9： 垂直分屏-3屏<br>Ctrl+K+B： 开启/关闭侧边栏。<br>F11： 全屏模式<br>Shift+F11：免打扰模式</p><h1 id="图解"><a href="#图解" class="headerlink" title="图解"></a>图解</h1><h2 id="1-选择一个选中项的下一个匹配项-ctrl-d"><a href="#1-选择一个选中项的下一个匹配项-ctrl-d" class="headerlink" title="1.选择一个选中项的下一个匹配项: ctrl+d"></a>1.选择一个选中项的下一个匹配项: ctrl+d</h2><p>把光标放在一个单词上，按下⌘+ D,将选择这个单词。一直按住⌘且按D多次，将选择当前选中项的下一个匹配项。通过按住⌘,再按D三次,将选择三个相同的文本。<br><img src="/images/sublime/sublime1.gif" class="full-image"> </p><h2 id="2-选择一个选中项的所有匹配项-alt-f3"><a href="#2-选择一个选中项的所有匹配项-alt-f3" class="headerlink" title="2.选择一个选中项的所有匹配项: alt+f3"></a>2.选择一个选中项的所有匹配项: alt+f3</h2><p>和上面一样,但它选择文件中的所有匹配项。小心使用这个,因为它能选择一个文件中的所有匹配项. .<br><img src="/images/sublime/sublime2.gif" class="full-image"></p><h2 id="3-选择与光标关联的开始和结束标签-ctrl-shift-’"><a href="#3-选择与光标关联的开始和结束标签-ctrl-shift-’" class="headerlink" title="3.选择与光标关联的开始和结束标签:  ctrl+shift+’"></a>3.选择与光标关联的开始和结束标签:  ctrl+shift+’</h2><p>这是一个法宝。也许你希望所有属性保持不变,但只是想选择标签。这个快捷键为你这样做,会注意到你可以在一次操作多个标签。<em>需要Emmet插件</em><br><img src="/images/sublime/sublime3.gif" class="full-image"></p><h2 id="4-选择容器内内容-ctrl-shift-a"><a href="#4-选择容器内内容-ctrl-shift-a" class="headerlink" title="4.选择容器内内容: ctrl+shift+a"></a>4.选择容器内内容: ctrl+shift+a</h2><p>如果你把光标放在文本间再按下上面的键将选择文本,就像ctrl+ D。但是再次按下它，将选择父容器,再按,将选择父容器的父容器。<em>需要Emmet插件</em><br><img src="/images/sublime/sublime4.gif" class="full-image"></p><h2 id="5-选择括号内的内容-ctrl-shift-m"><a href="#5-选择括号内的内容-ctrl-shift-m" class="headerlink" title="5.选择括号内的内容: ctrl+shift+m"></a>5.选择括号内的内容: ctrl+shift+m</h2><p>这有助于选择括号之间的一切。同样适用于CSS。<br><img src="/images/sublime/sublime5.gif" class="full-image"></p><h2 id="6-上移或下移行-ctrl-shift-↑-或-↓"><a href="#6-上移或下移行-ctrl-shift-↑-或-↓" class="headerlink" title="6.上移或下移行: ctrl+shift+↑ 或 ↓"></a>6.上移或下移行: ctrl+shift+↑ 或 ↓</h2><p><img src="/images/sublime/sublime6.gif" class="full-image"></p><h2 id="7-复制行或选中项-ctrl-shift-d"><a href="#7-复制行或选中项-ctrl-shift-d" class="headerlink" title="7.复制行或选中项: ctrl+shift+d"></a>7.复制行或选中项: ctrl+shift+d</h2><p>如果你已经选中了文本,它会复制你的选中项。否则,把光标放在行上,会复制整行。<br><img src="/images/sublime/sublime7.gif" class="full-image"></p><h2 id="8-增加和减少缩进-ctrl-或"><a href="#8-增加和减少缩进-ctrl-或" class="headerlink" title="8.增加和减少缩进: ctrl+[ 或 ]"></a>8.增加和减少缩进: ctrl+[ 或 ]</h2><p><img src="/images/sublime/sublime8.gif" class="full-image"></p><h2 id="9-剪切行或选中项-ctrl-x"><a href="#9-剪切行或选中项-ctrl-x" class="headerlink" title="9.剪切行或选中项: ctrl+x"></a>9.剪切行或选中项: ctrl+x</h2><p><img src="/images/sublime/sublime9.gif" class="full-image"></p><h2 id="10-粘贴并保持缩进-ctrl-shift-v"><a href="#10-粘贴并保持缩进-ctrl-shift-v" class="headerlink" title="10.粘贴并保持缩进: ctrl+shift+v"></a>10.粘贴并保持缩进: ctrl+shift+v</h2><p>这是又一个我每次都用的快捷键。在gif中我显示了普通粘贴(ctrl+ V)和缩进粘贴两种效果的对比。注意缩进如何排列。<br><img src="/images/sublime/sublime10.gif" class="full-image"></p><h2 id="11-用标签包裹行或选中项-alt-shift-w"><a href="#11-用标签包裹行或选中项-alt-shift-w" class="headerlink" title="11.用标签包裹行或选中项: alt+shift+w"></a>11.用标签包裹行或选中项: alt+shift+w</h2><p>使用标签包裹一行; 开始输入你想使用的标签,你成功了.<br><img src="/images/sublime/sublime11.gif" class="full-image"></p><h2 id="12-移除未闭合的容器元素-ctrl-shift"><a href="#12-移除未闭合的容器元素-ctrl-shift" class="headerlink" title="12.移除未闭合的容器元素: ctrl+shift+;"></a>12.移除未闭合的容器元素: ctrl+shift+;</h2><p>这会移除与你的光标相关的父标签。对清除标记很有帮助。<br><img src="/images/sublime/sublime12.gif" class="full-image"></p><h2 id="13-计算数学表达式-ctrl-shift-y"><a href="#13-计算数学表达式-ctrl-shift-y" class="headerlink" title="13.计算数学表达式: ctrl+shift+y"></a>13.计算数学表达式: ctrl+shift+y</h2><p>我从未想过我会经常使用这个，但是确实很好用<br><img src="/images/sublime/sublime13.gif" class="full-image"></p><h2 id="14-递增和递减-alt-shift-↑-或-↓，ctrl-↑-或-↓"><a href="#14-递增和递减-alt-shift-↑-或-↓，ctrl-↑-或-↓" class="headerlink" title="14.递增和递减: alt+shift+↑ 或 ↓，ctrl+ ↑ 或 ↓"></a>14.递增和递减: alt+shift+↑ 或 ↓，ctrl+ ↑ 或 ↓</h2><p>按住 ↑ 将以10的步长改变数字, 不按住以1为步长. 同时注意到你不需要选择数字, Sublime Text 足够聪明到更新本行最近的数字.<br><img src="/images/sublime/sublime14.gif" class="full-image"></p><h2 id="15-大写和小写-ctrl-k-u-ctrl-k-l"><a href="#15-大写和小写-ctrl-k-u-ctrl-k-l" class="headerlink" title="15.大写和小写: ctrl+k+u,ctrl+k+l"></a>15.大写和小写: ctrl+k+u,ctrl+k+l</h2><p><img src="/images/sublime/sublime15.gif" class="full-image"></p><h2 id="16-注释选中项-行-ctrl"><a href="#16-注释选中项-行-ctrl" class="headerlink" title="16.注释选中项/行: ctrl+/"></a>16.注释选中项/行: ctrl+/</h2><p>这个在所有语言下都可用, 对行和选中项都可用.<br><img src="/images/sublime/sublime16.gif" class="full-image"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Sublime-Text-3-快捷键（实用，快速换行等）&quot;&gt;&lt;a href=&quot;#Sublime-Text-3-快捷键（实用，快速换行等）&quot; class=&quot;headerlink&quot; title=&quot;Sublime Text 3 快捷键（实用，快速换行等）&quot;&gt;&lt;/a&gt;Su
      
    
    </summary>
    
      <category term="工具" scheme="http://haimianbao1111.github.io/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="工具" scheme="http://haimianbao1111.github.io/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>MVC使用x.PagedList分页</title>
    <link href="http://haimianbao1111.github.io/2018/01/28/MVC%E4%BD%BF%E7%94%A8x-PagedList%E5%88%86%E9%A1%B5/"/>
    <id>http://haimianbao1111.github.io/2018/01/28/MVC使用x-PagedList分页/</id>
    <published>2018-01-28T07:32:02.000Z</published>
    <updated>2018-01-28T08:51:17.128Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MVC分页"><a href="#MVC分页" class="headerlink" title="MVC分页"></a>MVC分页</h1><ol><li><p>Nuget安装 X.PagedList和X.PagedList.MVC<br>package.config文件:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;package id=&quot;X.PagedList&quot; version=&quot;1.24.1.300&quot; targetFramework=&quot;net45&quot; /&gt;</span><br><span class="line">&lt;package id=&quot;X.PagedList.Mvc&quot; version=&quot;4.9.1.310&quot; targetFramework=&quot;net45&quot; /&gt;</span><br></pre></td></tr></table></figure></li><li><p>View界面：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">@model  PagedList.IPagedList&lt;T&gt;</span><br><span class="line">@using Model</span><br><span class="line">@using PagedList</span><br><span class="line">@using PagedList.Mvc</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">    &lt;h1&gt;Mvc分页例子&lt;/h1&gt;</span><br><span class="line">    &lt;table id=&quot;tbList&quot;&gt;</span><br><span class="line">        &lt;tbody&gt;</span><br><span class="line">            @if (Model.Count() != 0)</span><br><span class="line">            &#123;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 60px;&quot;&gt;编号&lt;/th&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 150px;&quot;&gt;创建时间&lt;/th&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 200px;&quot;&gt;标题&lt;/th&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 250px;&quot;&gt;内容&lt;/th&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 80px;&quot;&gt;查看次数&lt;/th&gt;</span><br><span class="line">                    &lt;th style=&quot;width: 180px;&quot;&gt;图片&lt;/th&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">                foreach (var a in Model)</span><br><span class="line">                &#123;</span><br><span class="line">                    &lt;tr style=&quot;text-align: center;&quot;&gt;</span><br><span class="line">                        &lt;td&gt;@a.id&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@a.createtime&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@a.title&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@a.body&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@a.visitnum&lt;/td&gt;</span><br><span class="line">                        &lt;td&gt;@a.img&lt;/td&gt;</span><br><span class="line">                    &lt;/tr&gt;</span><br><span class="line">                &#125;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td colspan=&quot;6&quot;&gt;</span><br><span class="line">                        &lt;div class=&quot;pager&quot;&gt;</span><br><span class="line">                            @if (Model != null)</span><br><span class="line">                            &#123;</span><br><span class="line">                                &lt;span style=&quot;height: 20px; line-height: 20px;&quot;&gt;</span><br><span class="line">                                    共 @Model.TotalItemCount.ToString() 条记录，</span><br><span class="line">                                    当前第 @ViewData[&quot;page&quot;] 页/共 @Model.PageCount 页</span><br><span class="line">                                &lt;/span&gt;</span><br><span class="line">                                    @Html.PagedListPager(Model, page =&gt; Url.Action(&quot;TableByChaJ&quot;, new &#123; page &#125;), new PagedListRenderOptions() &#123; LinkToFirstPageFormat = &quot;首页&quot;, LinkToNextPageFormat = &quot;下一页&quot;, LinkToPreviousPageFormat = &quot;上一页&quot;, LinkToLastPageFormat = &quot;末页&quot;, DisplayItemSliceAndTotal = false, MaximumPageNumbersToDisplay = 3 &#125;)</span><br><span class="line">                            &#125;</span><br><span class="line">                        &lt;/div&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/tbody&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></li></ol><p>注意：PagedList.IPagedList<t> 中T 改成自己分页的实体类</t></p><ol><li>controller控制器:<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public ActionResult ActionName(int? page)</span><br><span class="line">&#123;</span><br><span class="line">    int PageNumber = page ?? 1;//page为null时默认值为1</span><br><span class="line">    int PageSize = 5;</span><br><span class="line">    ViewData[&quot;page&quot;] = PageNumber;</span><br><span class="line">    return View(VideoDAL.GetListPage().ToPagedList(PageNumber, PageSize));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>注意:代码中的list为list<t> 形式，返回视图IPagedList<t> </t></t></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;MVC分页&quot;&gt;&lt;a href=&quot;#MVC分页&quot; class=&quot;headerlink&quot; title=&quot;MVC分页&quot;&gt;&lt;/a&gt;MVC分页&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;Nuget安装 X.PagedList和X.PagedList.MVC&lt;br&gt;package.co
      
    
    </summary>
    
      <category term="MVC" scheme="http://haimianbao1111.github.io/categories/MVC/"/>
    
    
      <category term="MVC,X.PagedList" scheme="http://haimianbao1111.github.io/tags/MVC-X-PagedList/"/>
    
  </entry>
  
</feed>
